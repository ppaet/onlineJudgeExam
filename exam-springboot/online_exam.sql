/*
 Navicat Premium Data Transfer

 Source Server         : tencent
 Source Server Type    : MySQL
 Source Server Version : 80036 (8.0.36-0ubuntu0.22.04.1)
 Source Host           : 129.204.59.166:3306
 Source Schema         : online_exam

 Target Server Type    : MySQL
 Target Server Version : 80036 (8.0.36-0ubuntu0.22.04.1)
 File Encoding         : 65001

 Date: 19/06/2024 20:15:18
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for course
-- ----------------------------
DROP TABLE IF EXISTS `course`;
CREATE TABLE `course`  (
  `c_id` int NOT NULL AUTO_INCREMENT COMMENT '课程ID ',
  `u_id` int NULL DEFAULT NULL COMMENT '教师id',
  `name` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NULL DEFAULT NULL COMMENT '课程名称',
  `course_code` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NULL DEFAULT NULL COMMENT '课程代码，学生可通过班级码加入班级',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间',
  `is_exist` int NULL DEFAULT NULL COMMENT '用于逻辑删除，默认值1代表存在，0代表删除',
  PRIMARY KEY (`c_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 43 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of course
-- ----------------------------
INSERT INTO `course` VALUES (37, 22, 'ces', '19051509', '2024-02-27 12:35:12', 0);
INSERT INTO `course` VALUES (38, 22, 'test', '76445347', '2024-02-28 14:07:38', 0);
INSERT INTO `course` VALUES (39, 22, 'dasd', '33041641', '2024-02-28 16:17:13', 0);
INSERT INTO `course` VALUES (40, 22, '0310', '25476282', '2024-03-10 10:43:23', 0);
INSERT INTO `course` VALUES (41, 22, 'java', '88425676', '2024-03-24 04:12:49', 1);
INSERT INTO `course` VALUES (42, 22, 'test', '49459850', '2024-03-24 11:06:05', 1);

-- ----------------------------
-- Table structure for difficulty
-- ----------------------------
DROP TABLE IF EXISTS `difficulty`;
CREATE TABLE `difficulty`  (
  `d_id` int NOT NULL,
  `name` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`d_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb3 COLLATE = utf8mb3_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of difficulty
-- ----------------------------
INSERT INTO `difficulty` VALUES (1, '低');
INSERT INTO `difficulty` VALUES (2, '中');
INSERT INTO `difficulty` VALUES (3, '高');

-- ----------------------------
-- Table structure for exam
-- ----------------------------
DROP TABLE IF EXISTS `exam`;
CREATE TABLE `exam`  (
  `e_id` int NOT NULL AUTO_INCREMENT COMMENT '教师Id',
  `u_id` int NULL DEFAULT NULL COMMENT '教师ID',
  `c_id` int NULL DEFAULT NULL COMMENT '课程ID',
  `p_id` int NULL DEFAULT NULL COMMENT '试卷ID',
  `name` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NULL DEFAULT NULL COMMENT '考试名称',
  `start_time` datetime NULL DEFAULT NULL COMMENT '考试开始时间',
  `end_time` datetime NULL DEFAULT NULL COMMENT '考试结束时间',
  `status` int NULL DEFAULT NULL COMMENT '考试状态',
  `is_exist` int NULL DEFAULT NULL COMMENT '逻辑删除，默认值1表示存在，0表示删除',
  PRIMARY KEY (`e_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 35 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of exam
-- ----------------------------
INSERT INTO `exam` VALUES (22, 22, 40, 42, 'test', '2024-03-21 00:00:00', '2024-03-28 00:00:00', 0, 0);
INSERT INTO `exam` VALUES (23, 22, 40, 43, 'test', '2024-03-22 00:00:00', '2024-03-29 00:00:00', 0, 0);
INSERT INTO `exam` VALUES (24, 22, 39, 43, 'asd', '2024-03-23 00:00:00', '2024-03-30 00:00:00', 0, 0);
INSERT INTO `exam` VALUES (25, 22, 41, 44, 'java', '2024-03-24 00:00:00', '2024-03-31 00:00:00', 0, 1);
INSERT INTO `exam` VALUES (26, 22, 41, 44, 'java test', '2024-03-24 00:00:00', '2024-03-31 00:00:00', 0, 1);
INSERT INTO `exam` VALUES (27, 22, 42, 45, 'test', '2024-03-24 00:00:00', '2024-03-31 00:00:00', 0, 1);
INSERT INTO `exam` VALUES (28, 22, 41, 46, 'ojtest', '2024-04-02 00:00:00', '2024-04-30 00:00:00', 0, 0);
INSERT INTO `exam` VALUES (29, 22, 41, 47, 'java期末考', '2024-04-02 00:00:00', '2024-04-30 00:00:00', 0, 1);
INSERT INTO `exam` VALUES (30, 22, 41, 45, 'test', '2024-04-02 00:00:00', '2024-04-30 00:00:00', 0, 1);
INSERT INTO `exam` VALUES (31, 22, 41, 48, 'Java考试', '2024-04-21 00:00:00', '2024-06-21 00:00:00', 1, 1);
INSERT INTO `exam` VALUES (32, 22, 42, 49, 'asdasd', '2024-04-25 00:00:00', '2024-06-30 00:00:00', 1, 1);
INSERT INTO `exam` VALUES (33, 22, 41, 50, 'Java毕设随机试卷考试', '2024-05-04 00:00:00', '2024-06-11 00:00:00', 1, 1);
INSERT INTO `exam` VALUES (34, 22, 41, 52, 'testt', '2024-05-06 00:00:00', '2024-06-13 00:00:00', 1, 1);

-- ----------------------------
-- Table structure for exam_answer
-- ----------------------------
DROP TABLE IF EXISTS `exam_answer`;
CREATE TABLE `exam_answer`  (
  `aq_id` int NOT NULL AUTO_INCREMENT COMMENT '试卷回答',
  `se_id` int NULL DEFAULT NULL,
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL,
  PRIMARY KEY (`aq_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 16 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of exam_answer
-- ----------------------------
INSERT INTO `exam_answer` VALUES (6, 30, '[{\"answer\":\"1\",\"question\":\"判断题：对\",\"rightAnswer\":\"1\",\"score\":1.0,\"status\":1,\"tId\":43,\"typeId\":1},{\"answer\":\"B\",\"question\":\"单选题A\",\"rightAnswer\":\"A\",\"score\":0.0,\"status\":0,\"tId\":44,\"typeId\":2},{\"answer\":\"[\\\"C\\\",\\\"D\\\"]\",\"question\":\"多选题AB\",\"rightAnswer\":\"[\\\"A\\\",\\\"B\\\"]\",\"score\":1.0,\"status\":1,\"tId\":45,\"typeId\":3},{\"answer\":\"asd\",\"question\":\"填空题___ASD\",\"rightAnswer\":\"ASD\",\"score\":0.0,\"status\":0,\"tId\":46,\"typeId\":4},{\"answer\":\"ASDAD\",\"question\":\"主观题____asdasd\",\"rightAnswer\":\"asdasd\",\"score\":0.0,\"status\":0,\"tId\":47,\"typeId\":5}]');
INSERT INTO `exam_answer` VALUES (7, 31, '[{\"answer\":\"1\",\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"rightAnswer\":\"0\",\"score\":0.0,\"status\":1,\"tId\":54,\"typeId\":1},{\"answer\":\"0\",\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"rightAnswer\":\"1\",\"score\":0.0,\"status\":1,\"tId\":55,\"typeId\":1},{\"answer\":\"1\",\"question\":\"在Java中对象可以赋值，只要使用赋值号（等号）即可，相当于生成了一个各属性与赋值对象相同的新对象。\",\"rightAnswer\":\"0\",\"score\":0.0,\"status\":1,\"tId\":56,\"typeId\":1},{\"answer\":\"0\",\"question\":\"在异常处理中，若try中的代码可能产生多种异常则可以对应多个catch语句，若catch中的参数类型有父类子类关系，此时应该将父类放在后面，子类放在前面。\",\"rightAnswer\":\"1\",\"score\":0.0,\"status\":1,\"tId\":57,\"typeId\":1},{\"answer\":\"B\",\"question\":\"下面的代码段执行之后count的值是什么（ ）。\\nint count = 1;\\nfor (int i = 1; i <= 5; i++) {//第一次i出去是1\\n\\tcount += i;}\\nSystem.out.println(count);\\nA、5 B、1 C、15 D、16\",\"rightAnswer\":\"D\",\"score\":0.0,\"status\":1,\"tId\":64,\"typeId\":2},{\"answer\":\"C\",\"question\":\"下列哪一个import命令可以使我们在程序中创建输入/输出流对象（  ）。\\nA、import java.sql.; B、import java.util.;\\nC、import java.io.; D、import java.net.;\",\"rightAnswer\":\"C\",\"score\":4.0,\"status\":0,\"tId\":65,\"typeId\":2},{\"answer\":\"B\",\"question\":\"编译Java Application 源程序文件将产生相应的字节码文件，这些字节码文件的扩展名为(  )。\\nA. java B. .class\\nC. html D. .exe\",\"rightAnswer\":\"B\",\"score\":4.0,\"status\":0,\"tId\":66,\"typeId\":2},{\"answer\":\"C\",\"question\":\"设 x = 1 , y = 2 , z = 3，则表达式 y＋＝z－－/＋＋x 的值是(  )。\\nA. 3 B. 3. 5 C. 4 D. 5\",\"rightAnswer\":\"A\",\"score\":0.0,\"status\":1,\"tId\":67,\"typeId\":2},{\"answer\":\"C\",\"question\":\"如下哪个是Java中有效的关键字( )\\nA、name B、hello C、false D、good\",\"rightAnswer\":\"C\",\"score\":4.0,\"status\":0,\"tId\":68,\"typeId\":2},{\"answer\":\"[\\\"C\\\",\\\"D\\\"]\",\"question\":\"下列属于jsp中注释的有(  )\\nA．<%--  与 --%>\\nB． /\\nC． /** 与 **/\\nD．  <!-- 与 -->\",\"rightAnswer\":\"[\\\"A\\\",\\\"D\\\"]\",\"score\":2.0,\"status\":1,\"tId\":70,\"typeId\":3},{\"answer\":\"[\\\"C\\\",\\\"D\\\"]\",\"question\":\"下面哪些不是java的简单数据类型( )\\nA. short\\nB. Boolean\\nC. Double\\nD. float\",\"rightAnswer\":\"[\\\"B\\\",\\\"C\\\"]\",\"score\":2.0,\"status\":1,\"tId\":74,\"typeId\":3},{\"answer\":\"[\\\"C\\\",\\\"B\\\"]\",\"question\":\"下列说法错误的有( )\\nA． 数组是一种对象\\nB． 数组属于一种原生类\\nC． int number=[]={31,23,33,43,35,63}\\nD． 数组的大小可以任意改变\",\"rightAnswer\":\"[\\\"B\\\",\\\"C\\\",\\\"D\\\"]\",\"score\":2.0,\"status\":1,\"tId\":75,\"typeId\":3},{\"answer\":\"[\\\"A\\\",\\\"C\\\"]\",\"question\":\"不能用来修饰interface的有( )\\nA．private\\nB．public\\nC．protected\\nD．static\",\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\"]\",\"score\":4.0,\"status\":0,\"tId\":76,\"typeId\":3},{\"answer\":\"[\\\"B\\\",\\\"C\\\"]\",\"question\":\"下列说法错误的有( )\\nA． 在类方法中可用this来调用本类的类方法\\nB． 在类方法中调用本类的类方法时可直接调用\\nC． 在类方法中只能调用本类中的类方法\\nD． 在类方法中绝对不能调用实例方法\",\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\",\\\"D\\\"]\",\"score\":2.0,\"status\":1,\"tId\":77,\"typeId\":3},{\"answer\":\"0\",\"question\":\"设 x = 2 ，则表达式 ( x + + )／3 的值是___\",\"rightAnswer\":\"0\",\"score\":4.0,\"status\":0,\"tId\":80,\"typeId\":4},{\"answer\":\"Hello!I love JAVA.\",\"question\":\"下面程序的运行结果:____\\nimport java.io.*;\\npublic class abc\\n{   \\npublic static void main(String args [ ])\\n{    \\nAB s = new AB(\\\"Hello!\\\",\\\"I love JAVA.\\\");\\n         System.out.println(s.toString( ));\\n    }\\n}\\nclass AB {\\n  String s1;\\n  String s2;\\n  public AB(String str1, String str2)\\n  { \\ns1 = str1;  \\ns2 = str2; \\n}\\n  public String toString( )\\n  { \\nreturn s1+s2;\\n}\\n}\",\"rightAnswer\":\"Hello! I love JAVA.\",\"score\":0.0,\"status\":1,\"tId\":83,\"typeId\":4},{\"answer\":\"三角形\",\"question\":\"以下程序段的输出结果是___\\nint x = 5, y = 6, z = 4;\\n\\tif (x + y > z && x + z > y && z + y > x)\\n\\t\\tSystem.out.println(\\\"三角形\\\");\\n\\telse\\n\\t\\tSystem.out.println(\\\"不是三角形\\\");\",\"rightAnswer\":\"三角形\",\"score\":4.0,\"status\":0,\"tId\":84,\"typeId\":4},{\"answer\":\"23456\",\"question\":\"下面程序段的执行结果是_____\\n\\nint a[] = { 2, 3, 4, 5, 6 };\\n\\tfor (int i = a.length - 1; i >= 0; i--)\\n\\t//这里的a表示你上面定义的那个整型一维数组，然后a.length表示a数组的长度,第一次i出去是4所以a【4】=6\\n\\t\\tSystem.out.print(a[i] + \\\"\\\"); \",\"rightAnswer\":\"6 5 4 3 2\",\"score\":0.0,\"status\":1,\"tId\":85,\"typeId\":4},{\"answer\":\"sdf\",\"question\":\"构造方法是一种特殊的成员方法，构造方法名与_____ 相同。\",\"rightAnswer\":\"类名\",\"score\":0.0,\"status\":1,\"tId\":86,\"typeId\":4},{\"answer\":\"asdasd\",\"question\":\"用Java Application编写一个程序，输出你的班级和姓名。\",\"rightAnswer\":\"public class  HelloJava {  //类定义正确3分\\n\\tpublic static void main(String[] args) {//2分\\n\\t\\tSystem.out.println(\\\"学号=2013001，姓名=张三\\\");//5分\\n\\t}\\n}\",\"score\":0.0,\"status\":1,\"tId\":87,\"typeId\":5},{\"answer\":\"asdassad\",\"question\":\"规范输出9*9乘法表\",\"rightAnswer\":\"public class Programming16 {\\n    public static void main(String[] args) {\\n        for (int i = 1; i < 10; i++) {\\n            for (int j = 1; j <= i; j++) {\\n                System.out.print(j + \\\"*\\\" + i + \\\"=\\\" + j * i + \\\"\\\\t\\\");\\n            }\\n            System.out.println();\\n        }\\n    }\\n}\",\"score\":0.0,\"status\":1,\"tId\":90,\"typeId\":5}]');
INSERT INTO `exam_answer` VALUES (8, 32, '[{\"answer\":\"0\",\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"rightAnswer\":\"0\",\"score\":5.0,\"status\":0,\"tId\":54,\"typeId\":1},{\"answer\":\"1\",\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"rightAnswer\":\"1\",\"score\":5.0,\"status\":0,\"tId\":55,\"typeId\":1},{\"answer\":\"1\",\"question\":\"在Java中对象可以赋值，只要使用赋值号（等号）即可，相当于生成了一个各属性与赋值对象相同的新对象。\",\"rightAnswer\":\"0\",\"score\":0.0,\"status\":1,\"tId\":56,\"typeId\":1},{\"answer\":\"0\",\"question\":\"在异常处理中，若try中的代码可能产生多种异常则可以对应多个catch语句，若catch中的参数类型有父类子类关系，此时应该将父类放在后面，子类放在前面。\",\"rightAnswer\":\"1\",\"score\":0.0,\"status\":1,\"tId\":57,\"typeId\":1},{\"answer\":\"A\",\"question\":\"下面的代码段执行之后count的值是什么（ ）。\\nint count = 1;\\nfor (int i = 1; i <= 5; i++) {//第一次i出去是1\\n\\tcount += i;}\\nSystem.out.println(count);\\nA、5 B、1 C、15 D、16\",\"rightAnswer\":\"D\",\"score\":0.0,\"status\":1,\"tId\":64,\"typeId\":2},{\"answer\":\"B\",\"question\":\"下列哪一个import命令可以使我们在程序中创建输入/输出流对象（  ）。\\nA、import java.sql.; B、import java.util.;\\nC、import java.io.; D、import java.net.;\",\"rightAnswer\":\"C\",\"score\":0.0,\"status\":1,\"tId\":65,\"typeId\":2},{\"answer\":\"B\",\"question\":\"编译Java Application 源程序文件将产生相应的字节码文件，这些字节码文件的扩展名为(  )。\\nA. java B. .class\\nC. html D. .exe\",\"rightAnswer\":\"B\",\"score\":4.0,\"status\":0,\"tId\":66,\"typeId\":2},{\"answer\":\"B\",\"question\":\"设 x = 1 , y = 2 , z = 3，则表达式 y＋＝z－－/＋＋x 的值是(  )。\\nA. 3 B. 3. 5 C. 4 D. 5\",\"rightAnswer\":\"A\",\"score\":0.0,\"status\":1,\"tId\":67,\"typeId\":2},{\"answer\":\"B\",\"question\":\"如下哪个是Java中有效的关键字( )\\nA、name B、hello C、false D、good\",\"rightAnswer\":\"C\",\"score\":0.0,\"status\":1,\"tId\":68,\"typeId\":2},{\"answer\":\"[\\\"C\\\",\\\"B\\\"]\",\"question\":\"下列属于jsp中注释的有(  )\\nA．<%--  与 --%>\\nB． /\\nC． /** 与 **/\\nD．  <!-- 与 -->\",\"rightAnswer\":\"[\\\"A\\\",\\\"D\\\"]\",\"score\":2.0,\"status\":1,\"tId\":70,\"typeId\":3},{\"answer\":\"[\\\"C\\\",\\\"D\\\"]\",\"question\":\"下面哪些不是java的简单数据类型( )\\nA. short\\nB. Boolean\\nC. Double\\nD. float\",\"rightAnswer\":\"[\\\"B\\\",\\\"C\\\"]\",\"score\":2.0,\"status\":1,\"tId\":74,\"typeId\":3},{\"answer\":\"[\\\"B\\\",\\\"C\\\"]\",\"question\":\"下列说法错误的有( )\\nA． 数组是一种对象\\nB． 数组属于一种原生类\\nC． int number=[]={31,23,33,43,35,63}\\nD． 数组的大小可以任意改变\",\"rightAnswer\":\"[\\\"B\\\",\\\"C\\\",\\\"D\\\"]\",\"score\":2.0,\"status\":1,\"tId\":75,\"typeId\":3},{\"answer\":\"[\\\"B\\\",\\\"C\\\"]\",\"question\":\"不能用来修饰interface的有( )\\nA．private\\nB．public\\nC．protected\\nD．static\",\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\"]\",\"score\":2.0,\"status\":1,\"tId\":76,\"typeId\":3},{\"answer\":\"[\\\"B\\\",\\\"C\\\"]\",\"question\":\"下列说法错误的有( )\\nA． 在类方法中可用this来调用本类的类方法\\nB． 在类方法中调用本类的类方法时可直接调用\\nC． 在类方法中只能调用本类中的类方法\\nD． 在类方法中绝对不能调用实例方法\",\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\",\\\"D\\\"]\",\"score\":2.0,\"status\":1,\"tId\":77,\"typeId\":3},{\"answer\":\"0\",\"question\":\"设 x = 2 ，则表达式 ( x + + )／3 的值是___\",\"rightAnswer\":\"0\",\"score\":4.0,\"status\":0,\"tId\":80,\"typeId\":4},{\"answer\":\"123\",\"question\":\"下面程序的运行结果:____\\nimport java.io.*;\\npublic class abc\\n{   \\npublic static void main(String args [ ])\\n{    \\nAB s = new AB(\\\"Hello!\\\",\\\"I love JAVA.\\\");\\n         System.out.println(s.toString( ));\\n    }\\n}\\nclass AB {\\n  String s1;\\n  String s2;\\n  public AB(String str1, String str2)\\n  { \\ns1 = str1;  \\ns2 = str2; \\n}\\n  public String toString( )\\n  { \\nreturn s1+s2;\\n}\\n}\",\"rightAnswer\":\"Hello! I love JAVA.\",\"score\":0.0,\"status\":1,\"tId\":83,\"typeId\":4},{\"answer\":\"123\",\"question\":\"以下程序段的输出结果是___\\nint x = 5, y = 6, z = 4;\\n\\tif (x + y > z && x + z > y && z + y > x)\\n\\t\\tSystem.out.println(\\\"三角形\\\");\\n\\telse\\n\\t\\tSystem.out.println(\\\"不是三角形\\\");\",\"rightAnswer\":\"三角形\",\"score\":0.0,\"status\":1,\"tId\":84,\"typeId\":4},{\"answer\":\"123\",\"question\":\"下面程序段的执行结果是_____\\n\\nint a[] = { 2, 3, 4, 5, 6 };\\n\\tfor (int i = a.length - 1; i >= 0; i--)\\n\\t//这里的a表示你上面定义的那个整型一维数组，然后a.length表示a数组的长度,第一次i出去是4所以a【4】=6\\n\\t\\tSystem.out.print(a[i] + \\\"\\\"); \",\"rightAnswer\":\"6 5 4 3 2\",\"score\":0.0,\"status\":1,\"tId\":85,\"typeId\":4},{\"answer\":\"123\",\"question\":\"构造方法是一种特殊的成员方法，构造方法名与_____ 相同。\",\"rightAnswer\":\"类名\",\"score\":0.0,\"status\":1,\"tId\":86,\"typeId\":4},{\"answer\":\"123\",\"question\":\"用Java Application编写一个程序，输出你的班级和姓名。\",\"rightAnswer\":\"public class  HelloJava {  //类定义正确3分\\n\\tpublic static void main(String[] args) {//2分\\n\\t\\tSystem.out.println(\\\"学号=2013001，姓名=张三\\\");//5分\\n\\t}\\n}\",\"score\":0.0,\"status\":1,\"tId\":87,\"typeId\":5},{\"answer\":\"123\",\"question\":\"规范输出9*9乘法表\",\"rightAnswer\":\"public class Programming16 {\\n    public static void main(String[] args) {\\n        for (int i = 1; i < 10; i++) {\\n            for (int j = 1; j <= i; j++) {\\n                System.out.print(j + \\\"*\\\" + i + \\\"=\\\" + j * i + \\\"\\\\t\\\");\\n            }\\n            System.out.println();\\n        }\\n    }\\n}\",\"score\":0.0,\"status\":1,\"tId\":90,\"typeId\":5}]');
INSERT INTO `exam_answer` VALUES (9, 33, '[{\"answer\":\"1\",\"question\":\"1+1=2\",\"rightAnswer\":\"1\",\"score\":1.0,\"status\":0,\"tId\":91,\"typeId\":1},{\"answer\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a,b;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        b = scanner.nextInt();\\n        System.out.println(a+b);\\n    }\\n}\",\"question\":\"两数之和\",\"rightAnswer\":\"{\\\"answerContent\\\":\\\"import java.util.Scanner;\\\\npublic class Main{ \\\\n    public static void main(String[] args) { \\\\n        int a,b;\\\\n        Scanner scanner = new Scanner(System.in);\\\\n        a = scanner.nextInt();\\\\n        b = scanner.nextInt();\\\\n        System.out.println(a+b);\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"score\":5.0,\"status\":0,\"tId\":97,\"typeId\":5},{\"answer\":\"import java.util.Scanner;\\nimport java.lang.Math;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a,b;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        System.out.println(mySqrt(a));\\n    }\\npublic static int mySqrt(int x) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\n    }\\n}\",\"question\":\"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。\\n\\n由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。\",\"rightAnswer\":\"{\\\"answerContent\\\":\\\"import java.util.*;\\\\nimport java.lang.Math;\\\\npublic class Main{ \\\\n    public static void main(String[] args) { \\\\n        int a;\\\\n        Scanner scanner = new Scanner(System.in);\\\\n        a = scanner.nextInt();\\\\n        int c = mySqrt(a);\\\\n        System.out.println(c);\\\\n    }\\\\npublic static int mySqrt(int x) {\\\\n        if (x == 0) {\\\\n            return 0;\\\\n        }\\\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"score\":5.0,\"status\":0,\"tId\":98,\"typeId\":5}]');
INSERT INTO `exam_answer` VALUES (10, 34, '[{\"answer\":\"1\",\"question\":\"1+1=2\",\"rightAnswer\":\"1\",\"score\":1.0,\"status\":0,\"tId\":91,\"typeId\":1},{\"answer\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a,b;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        b = scanner.nextInt();\\n        System.out.println(a+b);\\n    }\\n}\",\"question\":\"两数之和\",\"rightAnswer\":\"{\\\"answerContent\\\":\\\"import java.util.Scanner;\\\\npublic class Main{ \\\\n    public static void main(String[] args) { \\\\n        int a,b;\\\\n        Scanner scanner = new Scanner(System.in);\\\\n        a = scanner.nextInt();\\\\n        b = scanner.nextInt();\\\\n        System.out.println(a+b);\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"score\":5.0,\"status\":0,\"tId\":97,\"typeId\":5},{\"answer\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        System.out.println(mySqrt(a));\\n    }\\n\\npublic static int mySqrt(int x) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\n    }\\n}\",\"question\":\"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。\\n\\n由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。\",\"rightAnswer\":\"{\\\"answerContent\\\":\\\"import java.util.*;\\\\nimport java.lang.Math;\\\\npublic class Main{ \\\\n    public static void main(String[] args) { \\\\n        int a;\\\\n        Scanner scanner = new Scanner(System.in);\\\\n        a = scanner.nextInt();\\\\n        int c = mySqrt(a);\\\\n        System.out.println(c);\\\\n    }\\\\npublic static int mySqrt(int x) {\\\\n        if (x == 0) {\\\\n            return 0;\\\\n        }\\\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"score\":5.0,\"status\":0,\"tId\":98,\"typeId\":5}]');
INSERT INTO `exam_answer` VALUES (11, 35, '[{\"answer\":\"1\",\"question\":\"1+1=2\",\"rightAnswer\":\"1\",\"score\":1.0,\"status\":0,\"tId\":91,\"typeId\":1},{\"answer\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a,b;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        b = scanner.nextInt();\\n        System.out.println(a+b);\\n    }\\n}\",\"question\":\"两数之和\",\"rightAnswer\":\"{\\\"answerContent\\\":\\\"import java.util.Scanner;\\\\npublic class Main{ \\\\n    public static void main(String[] args) { \\\\n        int a,b;\\\\n        Scanner scanner = new Scanner(System.in);\\\\n        a = scanner.nextInt();\\\\n        b = scanner.nextInt();\\\\n        System.out.println(a+b);\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"score\":5.0,\"status\":0,\"tId\":97,\"typeId\":5},{\"answer\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        System.out.println(mySqrt(a));\\n    }\\n\\npublic static int mySqrt(int x) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\n    }\\n}\",\"question\":\"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。\\n\\n由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。\",\"rightAnswer\":\"{\\\"answerContent\\\":\\\"import java.util.*;\\\\nimport java.lang.Math;\\\\npublic class Main{ \\\\n    public static void main(String[] args) { \\\\n        int a;\\\\n        Scanner scanner = new Scanner(System.in);\\\\n        a = scanner.nextInt();\\\\n        int c = mySqrt(a);\\\\n        System.out.println(c);\\\\n    }\\\\npublic static int mySqrt(int x) {\\\\n        if (x == 0) {\\\\n            return 0;\\\\n        }\\\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"score\":5.0,\"status\":0,\"tId\":98,\"typeId\":5}]');
INSERT INTO `exam_answer` VALUES (12, 36, '[{\"answer\":\"1\",\"question\":\"1+1=2\",\"rightAnswer\":\"1\",\"score\":1.0,\"status\":0,\"tId\":91,\"typeId\":1},{\"answer\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a,b;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        b = scanner.nextInt();\\n        System.out.println(a+b);\\n    }\\n}\",\"question\":\"两数之和\",\"rightAnswer\":\"{\\\"answerContent\\\":\\\"import java.util.Scanner;\\\\npublic class Main{ \\\\n    public static void main(String[] args) { \\\\n        int a,b;\\\\n        Scanner scanner = new Scanner(System.in);\\\\n        a = scanner.nextInt();\\\\n        b = scanner.nextInt();\\\\n        System.out.println(a+b);\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"score\":5.0,\"status\":0,\"tId\":97,\"typeId\":5},{\"answer\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        System.out.println(mySqrt(a));\\n    }\\n\\npublic static int mySqrt(int x) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\n    }\\n}\",\"question\":\"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。\\n\\n由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。\",\"rightAnswer\":\"{\\\"answerContent\\\":\\\"import java.util.*;\\\\nimport java.lang.Math;\\\\npublic class Main{ \\\\n    public static void main(String[] args) { \\\\n        int a;\\\\n        Scanner scanner = new Scanner(System.in);\\\\n        a = scanner.nextInt();\\\\n        int c = mySqrt(a);\\\\n        System.out.println(c);\\\\n    }\\\\npublic static int mySqrt(int x) {\\\\n        if (x == 0) {\\\\n            return 0;\\\\n        }\\\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"score\":5.0,\"status\":0,\"tId\":98,\"typeId\":5}]');
INSERT INTO `exam_answer` VALUES (13, 37, '[{\"answer\":\"1\",\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"rightAnswer\":\"0\",\"score\":0.0,\"status\":1,\"tId\":54,\"typeId\":1},{\"answer\":\"1\",\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"rightAnswer\":\"1\",\"score\":1.0,\"status\":0,\"tId\":55,\"typeId\":1},{\"answer\":\"1\",\"question\":\"在Java中对象可以赋值，只要使用赋值号（等号）即可，相当于生成了一个各属性与赋值对象相同的新对象。\",\"rightAnswer\":\"0\",\"score\":0.0,\"status\":1,\"tId\":56,\"typeId\":1},{\"answer\":\"1\",\"question\":\"在异常处理中，若try中的代码可能产生多种异常则可以对应多个catch语句，若catch中的参数类型有父类子类关系，此时应该将父类放在后面，子类放在前面。\",\"rightAnswer\":\"1\",\"score\":1.0,\"status\":0,\"tId\":57,\"typeId\":1},{\"answer\":\"1\",\"question\":\"1+1=2\",\"rightAnswer\":\"1\",\"score\":1.0,\"status\":0,\"tId\":91,\"typeId\":1},{\"answer\":\"A\",\"question\":\"以下关于继承的叙述正确的是（）。\\nA、在Java中类只允许单一继承\\nB、在Java中一个类只能实现一个接口\\nC、在Java中一个类不能同时继承一个类和实现一个接口\\nD、在Java中接口只允许单一继承\",\"rightAnswer\":\"A\",\"score\":2.0,\"status\":0,\"tId\":59,\"typeId\":2},{\"answer\":\"A\",\"question\":\"在使用interface声明一个接口时，只可以使用（  ）修饰符修饰该接口。\\nA、private B、protected C、private protected D、public\",\"rightAnswer\":\"D\",\"score\":0.0,\"status\":1,\"tId\":60,\"typeId\":2},{\"answer\":\"A\",\"question\":\"Java源文件和编译后的文件扩展名分别为（  ）\\nA.class 和java B.java 和class C.class和class D.java和java\",\"rightAnswer\":\"B\",\"score\":0.0,\"status\":1,\"tId\":61,\"typeId\":2},{\"answer\":\"A\",\"question\":\"Java“一次编译，随处运行”的特点在于其（  ）\\nA.跨平台性 B.面向对象型 C.多线程性 D.安全性\",\"rightAnswer\":\"A\",\"score\":2.0,\"status\":0,\"tId\":62,\"typeId\":2},{\"answer\":\"A\",\"question\":\"下列（  ）不是面向对象程序设计方法的特点。\\nA.封装 B.继承 C.多态 D.结构化\",\"rightAnswer\":\"D\",\"score\":0.0,\"status\":1,\"tId\":63,\"typeId\":2},{\"answer\":\"[\\\"A\\\"]\",\"question\":\"下列说法错误的有( )\\nA． 数组是一种对象\\nB． 数组属于一种原生类\\nC． int number=[]={31,23,33,43,35,63}\\nD． 数组的大小可以任意改变\",\"rightAnswer\":\"[\\\"B\\\",\\\"C\\\",\\\"D\\\"]\",\"score\":1.0,\"status\":1,\"tId\":75,\"typeId\":3},{\"answer\":\"[\\\"A\\\"]\",\"question\":\"不能用来修饰interface的有( )\\nA．private\\nB．public\\nC．protected\\nD．static\",\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\"]\",\"score\":1.0,\"status\":1,\"tId\":76,\"typeId\":3},{\"answer\":\"[\\\"A\\\"]\",\"question\":\"下列说法错误的有( )\\nA． 在类方法中可用this来调用本类的类方法\\nB． 在类方法中调用本类的类方法时可直接调用\\nC． 在类方法中只能调用本类中的类方法\\nD． 在类方法中绝对不能调用实例方法\",\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\",\\\"D\\\"]\",\"score\":1.0,\"status\":1,\"tId\":77,\"typeId\":3},{\"answer\":\"[\\\"A\\\"]\",\"question\":\"如下代码,哪两个说明是正确的( )\\nclass A {\\n\\tA() { }\\n}\\n\\nclass B extends A {\\n}\\nA. B类的构造器应该是 public.\\nB. B类的构造器应该是没有参数\\nC. B类的构造器应该调用this().\\nD. B类的构造器应该调用super().\",\"rightAnswer\":\"[\\\"B\\\",\\\"D\\\"]\",\"score\":1.0,\"status\":1,\"tId\":78,\"typeId\":3},{\"answer\":\"[\\\"A\\\",\\\"D\\\",\\\"C\\\"]\",\"question\":\"下列标识符不合法的有( )\\nA．new\\nB．$Usdollars\\nC．1234\\nD．car.taxi\",\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\",\\\"D\\\"]\",\"score\":2.0,\"status\":0,\"tId\":79,\"typeId\":3},{\"answer\":\"0\",\"question\":\"设 x = 2 ，则表达式 ( x + + )／3 的值是___\",\"rightAnswer\":\"0\",\"score\":2.0,\"status\":0,\"tId\":80,\"typeId\":4},{\"answer\":\"1\",\"question\":\"设有数组定义：int MyIntArray[ ] = { 10 , 20 , 30 , 40 , 50 , 60 , 70}; 则执行以下几个语句后的输出结果是___。\\nint s = 0 ;\\nfor (int i = 0 ; i < MyIntArray.length ; i + + )\\n    if ( i % 2 = = 1 )    \\ns += MyIntArray[i] ;\\nSystem.out.println(s);\",\"rightAnswer\":\"120\",\"score\":0.0,\"status\":1,\"tId\":81,\"typeId\":4},{\"answer\":\"1\",\"question\":\"下面程序的运行结果:____\\nimport java.io.*;\\npublic class abc\\n{   \\npublic static void main(String args [ ])\\n{    \\nAB s = new AB(\\\"Hello!\\\",\\\"I love JAVA.\\\");\\n         System.out.println(s.toString( ));\\n    }\\n}\\nclass AB {\\n  String s1;\\n  String s2;\\n  public AB(String str1, String str2)\\n  { \\ns1 = str1;  \\ns2 = str2; \\n}\\n  public String toString( )\\n  { \\nreturn s1+s2;\\n}\\n}\",\"rightAnswer\":\"Hello! I love JAVA.\",\"score\":0.0,\"status\":1,\"tId\":83,\"typeId\":4},{\"answer\":\"1\",\"question\":\"下面程序段的执行结果是_____\\n\\nint a[] = { 2, 3, 4, 5, 6 };\\n\\tfor (int i = a.length - 1; i >= 0; i--)\\n\\t//这里的a表示你上面定义的那个整型一维数组，然后a.length表示a数组的长度,第一次i出去是4所以a【4】=6\\n\\t\\tSystem.out.print(a[i] + \\\"\\\"); \",\"rightAnswer\":\"6 5 4 3 2\",\"score\":0.0,\"status\":1,\"tId\":85,\"typeId\":4},{\"answer\":\"1\",\"question\":\"构造方法是一种特殊的成员方法，构造方法名与_____ 相同。\",\"rightAnswer\":\"类名\",\"score\":0.0,\"status\":1,\"tId\":86,\"typeId\":4},{\"answer\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a,b;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        b = scanner.nextInt();\\n        System.out.println(a+b);\\n    }\\n}\",\"question\":\"两数之和\",\"rightAnswer\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a,b;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        b = scanner.nextInt();\\n        System.out.println(a+b);\\n    }\\n}\",\"score\":5.0,\"status\":0,\"tId\":97,\"typeId\":5},{\"answer\":\"import java.util.Scanner;\\nimport java.lang.Math;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        System.out.println(mySqrt(a));\\n    }\\n\\npublic static int mySqrt(int x) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\n    }\\n}\",\"question\":\"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。\\n\\n由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。\",\"rightAnswer\":\"import java.util.Scanner;\\nimport java.lang.Math;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        System.out.println(mySqrt(a));\\n    }\\n\\npublic static int mySqrt(int x) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\n    }\\n}\",\"score\":5.0,\"status\":0,\"tId\":98,\"typeId\":5}]');
INSERT INTO `exam_answer` VALUES (14, 38, '[{\"answer\":\"0\",\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"rightAnswer\":\"0\",\"score\":5.0,\"status\":0,\"tId\":54,\"typeId\":1},{\"answer\":\"1\",\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"rightAnswer\":\"1\",\"score\":5.0,\"status\":0,\"tId\":55,\"typeId\":1},{\"answer\":\"0\",\"question\":\"在Java中对象可以赋值，只要使用赋值号（等号）即可，相当于生成了一个各属性与赋值对象相同的新对象。\",\"rightAnswer\":\"0\",\"score\":5.0,\"status\":0,\"tId\":56,\"typeId\":1},{\"answer\":\"1\",\"question\":\"1+1=2\",\"rightAnswer\":\"1\",\"score\":5.0,\"status\":0,\"tId\":91,\"typeId\":1},{\"answer\":\"B\",\"question\":\"Java application中的主类需包含main方法，以下哪项是main方法的正确形参？\\nA、 String args B、String args[] C、Char arg D、StringBuffer args[]\",\"rightAnswer\":\"B\",\"score\":5.0,\"status\":0,\"tId\":58,\"typeId\":2},{\"answer\":\"A\",\"question\":\"以下关于继承的叙述正确的是（）。\\nA、在Java中类只允许单一继承\\nB、在Java中一个类只能实现一个接口\\nC、在Java中一个类不能同时继承一个类和实现一个接口\\nD、在Java中接口只允许单一继承\",\"rightAnswer\":\"A\",\"score\":5.0,\"status\":0,\"tId\":59,\"typeId\":2},{\"answer\":\"D\",\"question\":\"在使用interface声明一个接口时，只可以使用（  ）修饰符修饰该接口。\\nA、private B、protected C、private protected D、public\",\"rightAnswer\":\"D\",\"score\":5.0,\"status\":0,\"tId\":60,\"typeId\":2},{\"answer\":\"B\",\"question\":\"Java源文件和编译后的文件扩展名分别为（  ）\\nA.class 和java B.java 和class C.class和class D.java和java\",\"rightAnswer\":\"B\",\"score\":5.0,\"status\":0,\"tId\":61,\"typeId\":2},{\"answer\":\"[\\\"A\\\",\\\"C\\\",\\\"B\\\"]\",\"question\":\"按照学生平均成绩(avg_grade) 将students表中的数据检索出来，下面SQL语句正确的是(  )\\nA) SELECT * FROM students ORDER BY avg_grade\\nB) SELECT * FROM students GROUP BY avg_grade ASC\\nC) SELECT * FROM students ORDER BY avg_grade DESC\\nD) SELECT * FROM students ORDER by avg_grade asc\",\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\",\\\"D\\\"]\",\"score\":2.5,\"status\":1,\"tId\":71,\"typeId\":3},{\"answer\":\"[\\\"B\\\",\\\"C\\\"]\",\"question\":\"下面哪些不是java的简单数据类型( )\\nA. short\\nB. Boolean\\nC. Double\\nD. float\",\"rightAnswer\":\"[\\\"B\\\",\\\"C\\\"]\",\"score\":5.0,\"status\":0,\"tId\":74,\"typeId\":3},{\"answer\":\"[\\\"A\\\",\\\"C\\\",\\\"D\\\"]\",\"question\":\"不能用来修饰interface的有( )\\nA．private\\nB．public\\nC．protected\\nD．static\",\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\"]\",\"score\":2.5,\"status\":1,\"tId\":76,\"typeId\":3},{\"answer\":\"[\\\"B\\\",\\\"C\\\",\\\"D\\\"]\",\"question\":\"下列标识符不合法的有( )\\nA．new\\nB．$Usdollars\\nC．1234\\nD．car.taxi\",\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\",\\\"D\\\"]\",\"score\":2.5,\"status\":1,\"tId\":79,\"typeId\":3},{\"answer\":\"asd\",\"question\":\"设有数组定义：int MyIntArray[ ] = { 10 , 20 , 30 , 40 , 50 , 60 , 70}; 则执行以下几个语句后的输出结果是___。\\nint s = 0 ;\\nfor (int i = 0 ; i < MyIntArray.length ; i + + )\\n    if ( i % 2 = = 1 )    \\ns += MyIntArray[i] ;\\nSystem.out.println(s);\",\"rightAnswer\":\"120\",\"score\":0.0,\"status\":1,\"tId\":81,\"typeId\":4},{\"answer\":\"Hello!I love JAVA.\",\"question\":\"下面程序的运行结果:____\\nimport java.io.*;\\npublic class abc\\n{   \\npublic static void main(String args [ ])\\n{    \\nAB s = new AB(\\\"Hello!\\\",\\\"I love JAVA.\\\");\\n         System.out.println(s.toString( ));\\n    }\\n}\\nclass AB {\\n  String s1;\\n  String s2;\\n  public AB(String str1, String str2)\\n  { \\ns1 = str1;  \\ns2 = str2; \\n}\\n  public String toString( )\\n  { \\nreturn s1+s2;\\n}\\n}\",\"rightAnswer\":\"Hello! I love JAVA.\",\"score\":0.0,\"status\":1,\"tId\":83,\"typeId\":4},{\"answer\":\"三角形\",\"question\":\"以下程序段的输出结果是___\\nint x = 5, y = 6, z = 4;\\n\\tif (x + y > z && x + z > y && z + y > x)\\n\\t\\tSystem.out.println(\\\"三角形\\\");\\n\\telse\\n\\t\\tSystem.out.println(\\\"不是三角形\\\");\",\"rightAnswer\":\"三角形\",\"score\":5.0,\"status\":0,\"tId\":84,\"typeId\":4},{\"answer\":\"6 5 4 3 2 \",\"question\":\"下面程序段的执行结果是_____\\n\\nint a[] = { 2, 3, 4, 5, 6 };\\n\\tfor (int i = a.length - 1; i >= 0; i--)\\n\\t//这里的a表示你上面定义的那个整型一维数组，然后a.length表示a数组的长度,第一次i出去是4所以a【4】=6\\n\\t\\tSystem.out.print(a[i] + \\\"\\\"); \",\"rightAnswer\":\"6 5 4 3 2\",\"score\":0.0,\"status\":1,\"tId\":85,\"typeId\":4},{\"answer\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a,b;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        b = scanner.nextInt();\\n        System.out.println(a+b);\\n    }\\n}\",\"question\":\"两数之和：输入两个整数A，B返回A+B的值\",\"rightAnswer\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a,b;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        b = scanner.nextInt();\\n        System.out.println(a+b);\\n    }\\n}\",\"score\":10.0,\"status\":0,\"tId\":97,\"typeId\":5},{\"answer\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        System.out.println(mySqrt(a));\\n    }\\n\\npublic static int mySqrt(int x) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\n    }\\n}\",\"question\":\"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。\\n\\n由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。\",\"rightAnswer\":\"import java.util.Scanner;\\nimport java.lang.Math;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        System.out.println(mySqrt(a));\\n    }\\n\\npublic static int mySqrt(int x) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\n    }\\n}\",\"score\":10.0,\"status\":0,\"tId\":98,\"typeId\":5}]');
INSERT INTO `exam_answer` VALUES (15, 39, '[{\"answer\":\"1\",\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"rightAnswer\":\"0\",\"score\":0.0,\"status\":1,\"tId\":54,\"typeId\":1},{\"answer\":\"0\",\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"rightAnswer\":\"1\",\"score\":0.0,\"status\":1,\"tId\":55,\"typeId\":1},{\"answer\":\"1\",\"question\":\"在Java中对象可以赋值，只要使用赋值号（等号）即可，相当于生成了一个各属性与赋值对象相同的新对象。\",\"rightAnswer\":\"0\",\"score\":0.0,\"status\":1,\"tId\":56,\"typeId\":1},{\"answer\":\"0\",\"question\":\"在异常处理中，若try中的代码可能产生多种异常则可以对应多个catch语句，若catch中的参数类型有父类子类关系，此时应该将父类放在后面，子类放在前面。\",\"rightAnswer\":\"1\",\"score\":0.0,\"status\":1,\"tId\":57,\"typeId\":1},{\"answer\":\"0\",\"question\":\"JAVA程序的main方法必须写在类里面\",\"rightAnswer\":\"1\",\"score\":0.0,\"status\":1,\"tId\":104,\"typeId\":1},{\"answer\":\"1\",\"question\":\"变量由字母、下划线、数字、$符号随意组成\",\"rightAnswer\":\"0\",\"score\":0.0,\"status\":1,\"tId\":105,\"typeId\":1},{\"answer\":\"1\",\"question\":\"不同类型的变量，可以起相同的名字\",\"rightAnswer\":\"0\",\"score\":0.0,\"status\":1,\"tId\":106,\"typeId\":1},{\"answer\":\"1\",\"question\":\"for循环是先执行循环体语句，后进行条件判断\",\"rightAnswer\":\"0\",\"score\":0.0,\"status\":1,\"tId\":109,\"typeId\":1},{\"answer\":\"\",\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"rightAnswer\":\"0\",\"score\":0.0,\"status\":1,\"tId\":54,\"typeId\":1},{\"answer\":\"\",\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"rightAnswer\":\"1\",\"score\":0.0,\"status\":1,\"tId\":55,\"typeId\":1},{\"answer\":\"A\",\"question\":\"在使用interface声明一个接口时，只可以使用（  ）修饰符修饰该接口。\\nA、private B、protected C、private protected D、public\",\"rightAnswer\":\"D\",\"score\":0.0,\"status\":1,\"tId\":60,\"typeId\":2},{\"answer\":\"B\",\"question\":\"Java源文件和编译后的文件扩展名分别为（  ）\\nA.class 和java B.java 和class C.class和class D.java和java\",\"rightAnswer\":\"B\",\"score\":2.0,\"status\":0,\"tId\":61,\"typeId\":2},{\"answer\":\"B\",\"question\":\"Java“一次编译，随处运行”的特点在于其（  ）\\nA.跨平台性 B.面向对象型 C.多线程性 D.安全性\",\"rightAnswer\":\"A\",\"score\":0.0,\"status\":1,\"tId\":62,\"typeId\":2},{\"answer\":\"B\",\"question\":\"下面的代码段执行之后count的值是什么（ ）。\\nint count = 1;\\nfor (int i = 1; i <= 5; i++) {//第一次i出去是1\\n\\tcount += i;}\\nSystem.out.println(count);\\nA、5 B、1 C、15 D、16\",\"rightAnswer\":\"D\",\"score\":0.0,\"status\":1,\"tId\":64,\"typeId\":2},{\"answer\":\"B\",\"question\":\"下列哪一个import命令可以使我们在程序中创建输入/输出流对象（  ）。\\nA、import java.sql.; B、import java.util.;\\nC、import java.io.; D、import java.net.;\",\"rightAnswer\":\"C\",\"score\":0.0,\"status\":1,\"tId\":65,\"typeId\":2},{\"answer\":\"B\",\"question\":\"如下哪个是Java中有效的关键字( )\\nA、name B、hello C、false D、good\",\"rightAnswer\":\"C\",\"score\":0.0,\"status\":1,\"tId\":68,\"typeId\":2},{\"answer\":\"B\",\"question\":\"定义一个类，必须使用的关键字是( )\\nA、public B、class C、interface D、static\",\"rightAnswer\":\"B\",\"score\":2.0,\"status\":0,\"tId\":69,\"typeId\":2},{\"answer\":\"\",\"question\":\"1+1=()\\nA: 1\\nB: 2\\nC: 3\\nD: 4\",\"rightAnswer\":\"B\",\"score\":0.0,\"status\":1,\"tId\":101,\"typeId\":2},{\"answer\":\"\",\"question\":\"以下关于继承的叙述正确的是（）。\\nA、在Java中类只允许单一继承\\nB、在Java中一个类只能实现一个接口\\nC、在Java中一个类不能同时继承一个类和实现一个接口\\nD、在Java中接口只允许单一继承\",\"rightAnswer\":\"A\",\"score\":0.0,\"status\":1,\"tId\":59,\"typeId\":2},{\"answer\":\"\",\"question\":\"在使用interface声明一个接口时，只可以使用（  ）修饰符修饰该接口。\\nA、private B、protected C、private protected D、public\",\"rightAnswer\":\"D\",\"score\":0.0,\"status\":1,\"tId\":60,\"typeId\":2},{\"answer\":\"\",\"question\":\"接口中的方法只能是_____\",\"rightAnswer\":\"抽象方法\",\"score\":0.0,\"status\":1,\"tId\":82,\"typeId\":4},{\"answer\":\"\",\"question\":\"下面程序的运行结果:____\\nimport java.io.*;\\npublic class abc\\n{   \\npublic static void main(String args [ ])\\n{    \\nAB s = new AB(\\\"Hello!\\\",\\\"I love JAVA.\\\");\\n         System.out.println(s.toString( ));\\n    }\\n}\\nclass AB {\\n  String s1;\\n  String s2;\\n  public AB(String str1, String str2)\\n  { \\ns1 = str1;  \\ns2 = str2; \\n}\\n  public String toString( )\\n  { \\nreturn s1+s2;\\n}\\n}\",\"rightAnswer\":\"Hello! I love JAVA.\",\"score\":0.0,\"status\":1,\"tId\":83,\"typeId\":4},{\"answer\":\"\",\"question\":\"Java语言只允许单继承，指每个类只能有一个_____。\",\"rightAnswer\":\"父类\",\"score\":0.0,\"status\":1,\"tId\":120,\"typeId\":4},{\"answer\":\"\",\"question\":\"设 x = 2 ，则表达式 ( x + + )／3 的值是___\",\"rightAnswer\":\"0\",\"score\":0.0,\"status\":1,\"tId\":80,\"typeId\":4},{\"answer\":\"\",\"question\":\"设有数组定义：int MyIntArray[ ] = { 10 , 20 , 30 , 40 , 50 , 60 , 70}; 则执行以下几个语句后的输出结果是___。\\nint s = 0 ;\\nfor (int i = 0 ; i < MyIntArray.length ; i + + )\\n    if ( i % 2 = = 1 )    \\ns += MyIntArray[i] ;\\nSystem.out.println(s);\",\"rightAnswer\":\"120\",\"score\":0.0,\"status\":1,\"tId\":81,\"typeId\":4},{\"answer\":\"\",\"question\":\"两数之和：输入两个整数A，B返回A+B的值\",\"rightAnswer\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a,b;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        b = scanner.nextInt();\\n        System.out.println(a+b);\\n    }\\n}\",\"score\":0.0,\"status\":1,\"tId\":97,\"typeId\":5},{\"answer\":\"import java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner input=new Scanner(System.in);\\n        int score=input.nextInt();\\n        char grade=score>=90?\'A\':score>=60?\'B\':\'C\';\\n        System.out.println(grade);\\n    }\\n}\",\"question\":\"学习成绩> =90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。\",\"rightAnswer\":\"import java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner input=new Scanner(System.in);\\n        int score=input.nextInt();\\n        char grade=score>=90?\'A\':score>=60?\'B\':\'C\';\\n        System.out.println(grade);\\n    }\\n}\",\"score\":5.0,\"status\":0,\"tId\":123,\"typeId\":5}]');

-- ----------------------------
-- Table structure for papers
-- ----------------------------
DROP TABLE IF EXISTS `papers`;
CREATE TABLE `papers`  (
  `p_id` int NOT NULL AUTO_INCREMENT,
  `u_id` int NULL DEFAULT NULL,
  `name` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NULL DEFAULT NULL COMMENT '试卷名称',
  `content` text CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NULL COMMENT '整张试卷的内容，格式：{\r\n    \"tId\": {\r\n        \"question\":\"xxx\",\r\n         \"answer\":\"xxxx\"\r\n    },\r\n}',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间',
  `is_exist` int NULL DEFAULT NULL COMMENT '逻辑删除；1代表存在；0代表删除',
  PRIMARY KEY (`p_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 53 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of papers
-- ----------------------------
INSERT INTO `papers` VALUES (43, 22, 'test', '{\"1\":[{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"判断题：对\",\"score\":1,\"tId\":43}],\"2\":[{\"answer\":\"{\\\"answerContent\\\":\\\"A\\\",\\\"typeId\\\":2}\",\"question\":\"单选题A\",\"score\":2,\"tId\":44}],\"3\":[{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"B\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"多选题AB\",\"score\":2,\"tId\":45}],\"4\":[{\"answer\":\"{\\\"answerContent\\\":\\\"ASD\\\",\\\"typeId\\\":4}\",\"question\":\"填空题___ASD\",\"score\":2,\"tId\":46}],\"5\":[{\"answer\":\"{\\\"answerContent\\\":\\\"asdasd\\\",\\\"typeId\\\":5}\",\"question\":\"主观题____asdasd\",\"score\":5,\"tId\":47}]}', '2024-03-22 00:23:36', 0);
INSERT INTO `papers` VALUES (44, 22, 'java期末考', '{\"1\":[{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"score\":5,\"tId\":54},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"score\":5,\"tId\":55},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"在Java中对象可以赋值，只要使用赋值号（等号）即可，相当于生成了一个各属性与赋值对象相同的新对象。\",\"score\":5,\"tId\":56},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"在异常处理中，若try中的代码可能产生多种异常则可以对应多个catch语句，若catch中的参数类型有父类子类关系，此时应该将父类放在后面，子类放在前面。\",\"score\":5,\"tId\":57}],\"2\":[{\"answer\":\"{\\\"answerContent\\\":\\\"D\\\",\\\"typeId\\\":2}\",\"question\":\"下面的代码段执行之后count的值是什么（ ）。\\nint count = 1;\\nfor (int i = 1; i <= 5; i++) {//第一次i出去是1\\n\\tcount += i;}\\nSystem.out.println(count);\\nA、5 B、1 C、15 D、16\",\"score\":4,\"tId\":64},{\"answer\":\"{\\\"answerContent\\\":\\\"C\\\",\\\"typeId\\\":2}\",\"question\":\"下列哪一个import命令可以使我们在程序中创建输入/输出流对象（  ）。\\nA、import java.sql.; B、import java.util.;\\nC、import java.io.; D、import java.net.;\",\"score\":4,\"tId\":65},{\"answer\":\"{\\\"answerContent\\\":\\\"B\\\",\\\"typeId\\\":2}\",\"question\":\"编译Java Application 源程序文件将产生相应的字节码文件，这些字节码文件的扩展名为(  )。\\nA. java B. .class\\nC. html D. .exe\",\"score\":4,\"tId\":66},{\"answer\":\"{\\\"answerContent\\\":\\\"A\\\",\\\"typeId\\\":2}\",\"question\":\"设 x = 1 , y = 2 , z = 3，则表达式 y＋＝z－－/＋＋x 的值是(  )。\\nA. 3 B. 3. 5 C. 4 D. 5\",\"score\":4,\"tId\":67},{\"answer\":\"{\\\"answerContent\\\":\\\"C\\\",\\\"typeId\\\":2}\",\"question\":\"如下哪个是Java中有效的关键字( )\\nA、name B、hello C、false D、good\",\"score\":4,\"tId\":68}],\"3\":[{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列属于jsp中注释的有(  )\\nA．<%--  与 --%>\\nB． /\\nC． /** 与 **/\\nD．  <!-- 与 -->\",\"score\":4,\"tId\":70},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"B\\\\\\\",\\\\\\\"C\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下面哪些不是java的简单数据类型( )\\nA. short\\nB. Boolean\\nC. Double\\nD. float\",\"score\":4,\"tId\":74},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"B\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列说法错误的有( )\\nA． 数组是一种对象\\nB． 数组属于一种原生类\\nC． int number=[]={31,23,33,43,35,63}\\nD． 数组的大小可以任意改变\",\"score\":4,\"tId\":75},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"不能用来修饰interface的有( )\\nA．private\\nB．public\\nC．protected\\nD．static\",\"score\":4,\"tId\":76},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列说法错误的有( )\\nA． 在类方法中可用this来调用本类的类方法\\nB． 在类方法中调用本类的类方法时可直接调用\\nC． 在类方法中只能调用本类中的类方法\\nD． 在类方法中绝对不能调用实例方法\",\"score\":4,\"tId\":77}],\"4\":[{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":4}\",\"question\":\"设 x = 2 ，则表达式 ( x + + )／3 的值是___\",\"score\":4,\"tId\":80},{\"answer\":\"{\\\"answerContent\\\":\\\"Hello! I love JAVA.\\\",\\\"typeId\\\":4}\",\"question\":\"下面程序的运行结果:____\\nimport java.io.*;\\npublic class abc\\n{   \\npublic static void main(String args [ ])\\n{    \\nAB s = new AB(\\\"Hello!\\\",\\\"I love JAVA.\\\");\\n         System.out.println(s.toString( ));\\n    }\\n}\\nclass AB {\\n  String s1;\\n  String s2;\\n  public AB(String str1, String str2)\\n  { \\ns1 = str1;  \\ns2 = str2; \\n}\\n  public String toString( )\\n  { \\nreturn s1+s2;\\n}\\n}\",\"score\":4,\"tId\":83},{\"answer\":\"{\\\"answerContent\\\":\\\"三角形\\\",\\\"typeId\\\":4}\",\"question\":\"以下程序段的输出结果是___\\nint x = 5, y = 6, z = 4;\\n\\tif (x + y > z && x + z > y && z + y > x)\\n\\t\\tSystem.out.println(\\\"三角形\\\");\\n\\telse\\n\\t\\tSystem.out.println(\\\"不是三角形\\\");\",\"score\":4,\"tId\":84},{\"answer\":\"{\\\"answerContent\\\":\\\"6 5 4 3 2\\\",\\\"typeId\\\":4}\",\"question\":\"下面程序段的执行结果是_____\\n\\nint a[] = { 2, 3, 4, 5, 6 };\\n\\tfor (int i = a.length - 1; i >= 0; i--)\\n\\t//这里的a表示你上面定义的那个整型一维数组，然后a.length表示a数组的长度,第一次i出去是4所以a【4】=6\\n\\t\\tSystem.out.print(a[i] + \\\"\\\"); \",\"score\":4,\"tId\":85},{\"answer\":\"{\\\"answerContent\\\":\\\"类名\\\",\\\"typeId\\\":4}\",\"question\":\"构造方法是一种特殊的成员方法，构造方法名与_____ 相同。\",\"score\":4,\"tId\":86}],\"5\":[{\"answer\":\"{\\\"answerContent\\\":\\\"public class  HelloJava {  //类定义正确3分\\\\n\\\\tpublic static void main(String[] args) {//2分\\\\n\\\\t\\\\tSystem.out.println(\\\\\\\"学号=2013001，姓名=张三\\\\\\\");//5分\\\\n\\\\t}\\\\n}\\\",\\\"typeId\\\":5}\",\"question\":\"用Java Application编写一个程序，输出你的班级和姓名。\",\"score\":10,\"tId\":87},{\"answer\":\"{\\\"answerContent\\\":\\\"public class Programming16 {\\\\n    public static void main(String[] args) {\\\\n        for (int i = 1; i < 10; i++) {\\\\n            for (int j = 1; j <= i; j++) {\\\\n                System.out.print(j + \\\\\\\"*\\\\\\\" + i + \\\\\\\"=\\\\\\\" + j * i + \\\\\\\"\\\\\\\\t\\\\\\\");\\\\n            }\\\\n            System.out.println();\\\\n        }\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"question\":\"规范输出9*9乘法表\",\"score\":10,\"tId\":90}]}', '2024-03-24 04:12:09', 0);
INSERT INTO `papers` VALUES (45, 22, 'test', '{\"1\":[{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"1+1=2\",\"score\":1,\"tId\":91}],\"2\":[{\"answer\":\"{\\\"answerContent\\\":\\\"A\\\",\\\"typeId\\\":2}\",\"question\":\"设 x = 1 , y = 2 , z = 3，则表达式 y＋＝z－－/＋＋x 的值是(  )。\\nA. 3 B. 3. 5 C. 4 D. 5\",\"score\":2,\"tId\":67},{\"answer\":\"{\\\"answerContent\\\":\\\"C\\\",\\\"typeId\\\":2}\",\"question\":\"如下哪个是Java中有效的关键字( )\\nA、name B、hello C、false D、good\",\"score\":2,\"tId\":68}],\"3\":[{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"B\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"如下代码,哪两个说明是正确的( )\\nclass A {\\n\\tA() { }\\n}\\n\\nclass B extends A {\\n}\\nA. B类的构造器应该是 public.\\nB. B类的构造器应该是没有参数\\nC. B类的构造器应该调用this().\\nD. B类的构造器应该调用super().\",\"score\":2,\"tId\":78},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列标识符不合法的有( )\\nA．new\\nB．$Usdollars\\nC．1234\\nD．car.taxi\",\"score\":2,\"tId\":79}],\"4\":[{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":4}\",\"question\":\"设 x = 2 ，则表达式 ( x + + )／3 的值是___\",\"score\":2,\"tId\":80},{\"answer\":\"{\\\"answerContent\\\":\\\"三角形\\\",\\\"typeId\\\":4}\",\"question\":\"以下程序段的输出结果是___\\nint x = 5, y = 6, z = 4;\\n\\tif (x + y > z && x + z > y && z + y > x)\\n\\t\\tSystem.out.println(\\\"三角形\\\");\\n\\telse\\n\\t\\tSystem.out.println(\\\"不是三角形\\\");\",\"score\":2,\"tId\":84}],\"5\":[{\"answer\":\"{\\\"answerContent\\\":\\\"public class Programming13 {\\\\n    public static void main(String[] args) {\\\\n        for (int i = -100; i < 1600; i++) {\\\\n            if (Math.sqrt(i + 100) % 1 == 0 && Math.sqrt(i + 168) % 1 == 0) {\\\\n                System.out.println(i);\\\\n            }\\\\n        }\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"question\":\"一个整数加上100之后是一个完全平方数，加上168之后也是一个完全平方数，求这个数是多少？\",\"score\":5,\"tId\":89},{\"answer\":\"{\\\"answerContent\\\":\\\"public class Programming16 {\\\\n    public static void main(String[] args) {\\\\n        for (int i = 1; i < 10; i++) {\\\\n            for (int j = 1; j <= i; j++) {\\\\n                System.out.print(j + \\\\\\\"*\\\\\\\" + i + \\\\\\\"=\\\\\\\" + j * i + \\\\\\\"\\\\\\\\t\\\\\\\");\\\\n            }\\\\n            System.out.println();\\\\n        }\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"question\":\"规范输出9*9乘法表\",\"score\":5,\"tId\":90}]}', '2024-03-24 11:11:58', 1);
INSERT INTO `papers` VALUES (46, 22, 'ojtest', '{\"1\":[{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"1+1=2\",\"score\":1,\"tId\":91}],\"2\":[],\"3\":[],\"4\":[],\"5\":[{\"answer\":\"{\\\"answerContent\\\":\\\"{\\\\\\\"answerContent\\\\\\\":\\\\\\\"import java.util.Scanner;\\\\\\\\npublic class Main{ \\\\\\\\n    public static void main(String[] args) { \\\\\\\\n        int a,b;\\\\\\\\n        Scanner scanner = new Scanner(System.in);\\\\\\\\n        a = scanner.nextInt();\\\\\\\\n        b = scanner.nextInt();\\\\\\\\n        System.out.println(a+b);\\\\\\\\n    }\\\\\\\\n}\\\\\\\",\\\\\\\"typeId\\\\\\\":5}\\\",\\\"typeId\\\":5}\",\"question\":\"两数之和\",\"score\":5,\"tId\":97},{\"answer\":\"{\\\"answerContent\\\":\\\"{\\\\\\\"answerContent\\\\\\\":\\\\\\\"import java.util.*;\\\\\\\\nimport java.lang.Math;\\\\\\\\npublic class Main{ \\\\\\\\n    public static void main(String[] args) { \\\\\\\\n        int a;\\\\\\\\n        Scanner scanner = new Scanner(System.in);\\\\\\\\n        a = scanner.nextInt();\\\\\\\\n        int c = mySqrt(a);\\\\\\\\n        System.out.println(c);\\\\\\\\n    }\\\\\\\\npublic static int mySqrt(int x) {\\\\\\\\n        if (x == 0) {\\\\\\\\n            return 0;\\\\\\\\n        }\\\\\\\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\\\\\\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\\\\\\\n    }\\\\\\\\n}\\\\\\\",\\\\\\\"typeId\\\\\\\":5}\\\",\\\"typeId\\\":5}\",\"question\":\"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。\\n\\n由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。\",\"score\":5,\"tId\":98}]}', '2024-04-02 01:20:59', 0);
INSERT INTO `papers` VALUES (47, 22, 'java期末考', '{\"1\":[{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"score\":1,\"tId\":54},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"score\":1,\"tId\":55},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"在Java中对象可以赋值，只要使用赋值号（等号）即可，相当于生成了一个各属性与赋值对象相同的新对象。\",\"score\":1,\"tId\":56},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"在异常处理中，若try中的代码可能产生多种异常则可以对应多个catch语句，若catch中的参数类型有父类子类关系，此时应该将父类放在后面，子类放在前面。\",\"score\":1,\"tId\":57},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"1+1=2\",\"score\":1,\"tId\":91}],\"2\":[{\"answer\":\"{\\\"answerContent\\\":\\\"A\\\",\\\"typeId\\\":2}\",\"question\":\"以下关于继承的叙述正确的是（）。\\nA、在Java中类只允许单一继承\\nB、在Java中一个类只能实现一个接口\\nC、在Java中一个类不能同时继承一个类和实现一个接口\\nD、在Java中接口只允许单一继承\",\"score\":2,\"tId\":59},{\"answer\":\"{\\\"answerContent\\\":\\\"D\\\",\\\"typeId\\\":2}\",\"question\":\"在使用interface声明一个接口时，只可以使用（  ）修饰符修饰该接口。\\nA、private B、protected C、private protected D、public\",\"score\":2,\"tId\":60},{\"answer\":\"{\\\"answerContent\\\":\\\"B\\\",\\\"typeId\\\":2}\",\"question\":\"Java源文件和编译后的文件扩展名分别为（  ）\\nA.class 和java B.java 和class C.class和class D.java和java\",\"score\":2,\"tId\":61},{\"answer\":\"{\\\"answerContent\\\":\\\"A\\\",\\\"typeId\\\":2}\",\"question\":\"Java“一次编译，随处运行”的特点在于其（  ）\\nA.跨平台性 B.面向对象型 C.多线程性 D.安全性\",\"score\":2,\"tId\":62},{\"answer\":\"{\\\"answerContent\\\":\\\"D\\\",\\\"typeId\\\":2}\",\"question\":\"下列（  ）不是面向对象程序设计方法的特点。\\nA.封装 B.继承 C.多态 D.结构化\",\"score\":2,\"tId\":63}],\"3\":[{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"B\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列说法错误的有( )\\nA． 数组是一种对象\\nB． 数组属于一种原生类\\nC． int number=[]={31,23,33,43,35,63}\\nD． 数组的大小可以任意改变\",\"score\":2,\"tId\":75},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"不能用来修饰interface的有( )\\nA．private\\nB．public\\nC．protected\\nD．static\",\"score\":2,\"tId\":76},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列说法错误的有( )\\nA． 在类方法中可用this来调用本类的类方法\\nB． 在类方法中调用本类的类方法时可直接调用\\nC． 在类方法中只能调用本类中的类方法\\nD． 在类方法中绝对不能调用实例方法\",\"score\":2,\"tId\":77},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"B\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"如下代码,哪两个说明是正确的( )\\nclass A {\\n\\tA() { }\\n}\\n\\nclass B extends A {\\n}\\nA. B类的构造器应该是 public.\\nB. B类的构造器应该是没有参数\\nC. B类的构造器应该调用this().\\nD. B类的构造器应该调用super().\",\"score\":2,\"tId\":78},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列标识符不合法的有( )\\nA．new\\nB．$Usdollars\\nC．1234\\nD．car.taxi\",\"score\":2,\"tId\":79}],\"4\":[{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":4}\",\"question\":\"设 x = 2 ，则表达式 ( x + + )／3 的值是___\",\"score\":2,\"tId\":80},{\"answer\":\"{\\\"answerContent\\\":\\\"120\\\",\\\"typeId\\\":4}\",\"question\":\"设有数组定义：int MyIntArray[ ] = { 10 , 20 , 30 , 40 , 50 , 60 , 70}; 则执行以下几个语句后的输出结果是___。\\nint s = 0 ;\\nfor (int i = 0 ; i < MyIntArray.length ; i + + )\\n    if ( i % 2 = = 1 )    \\ns += MyIntArray[i] ;\\nSystem.out.println(s);\",\"score\":2,\"tId\":81},{\"answer\":\"{\\\"answerContent\\\":\\\"Hello! I love JAVA.\\\",\\\"typeId\\\":4}\",\"question\":\"下面程序的运行结果:____\\nimport java.io.*;\\npublic class abc\\n{   \\npublic static void main(String args [ ])\\n{    \\nAB s = new AB(\\\"Hello!\\\",\\\"I love JAVA.\\\");\\n         System.out.println(s.toString( ));\\n    }\\n}\\nclass AB {\\n  String s1;\\n  String s2;\\n  public AB(String str1, String str2)\\n  { \\ns1 = str1;  \\ns2 = str2; \\n}\\n  public String toString( )\\n  { \\nreturn s1+s2;\\n}\\n}\",\"score\":2,\"tId\":83},{\"answer\":\"{\\\"answerContent\\\":\\\"6 5 4 3 2\\\",\\\"typeId\\\":4}\",\"question\":\"下面程序段的执行结果是_____\\n\\nint a[] = { 2, 3, 4, 5, 6 };\\n\\tfor (int i = a.length - 1; i >= 0; i--)\\n\\t//这里的a表示你上面定义的那个整型一维数组，然后a.length表示a数组的长度,第一次i出去是4所以a【4】=6\\n\\t\\tSystem.out.print(a[i] + \\\"\\\"); \",\"score\":2,\"tId\":85},{\"answer\":\"{\\\"answerContent\\\":\\\"类名\\\",\\\"typeId\\\":4}\",\"question\":\"构造方法是一种特殊的成员方法，构造方法名与_____ 相同。\",\"score\":2,\"tId\":86}],\"5\":[{\"answer\":\"{\\\"answerContent\\\":\\\"import java.util.Scanner;\\\\npublic class Main{ \\\\n    public static void main(String[] args) { \\\\n        int a,b;\\\\n        Scanner scanner = new Scanner(System.in);\\\\n        a = scanner.nextInt();\\\\n        b = scanner.nextInt();\\\\n        System.out.println(a+b);\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"question\":\"两数之和\",\"score\":5,\"tId\":97},{\"answer\":\"{\\\"answerContent\\\":\\\"import java.util.Scanner;\\\\nimport java.lang.Math;\\\\npublic class Main{ \\\\n    public static void main(String[] args) { \\\\n        int a;\\\\n        Scanner scanner = new Scanner(System.in);\\\\n        a = scanner.nextInt();\\\\n        System.out.println(mySqrt(a));\\\\n    }\\\\n\\\\npublic static int mySqrt(int x) {\\\\n        if (x == 0) {\\\\n            return 0;\\\\n        }\\\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"question\":\"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。\\n\\n由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。\",\"score\":5,\"tId\":98}]}', '2024-04-02 23:39:32', 1);
INSERT INTO `papers` VALUES (48, 22, 'java考试试卷', '{\"1\":[{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"score\":5,\"tId\":54},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"score\":5,\"tId\":55},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"在Java中对象可以赋值，只要使用赋值号（等号）即可，相当于生成了一个各属性与赋值对象相同的新对象。\",\"score\":5,\"tId\":56},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"1+1=2\",\"score\":5,\"tId\":91}],\"2\":[{\"answer\":\"{\\\"answerContent\\\":\\\"B\\\",\\\"typeId\\\":2}\",\"question\":\"Java application中的主类需包含main方法，以下哪项是main方法的正确形参？\\nA、 String args B、String args[] C、Char arg D、StringBuffer args[]\",\"score\":5,\"tId\":58},{\"answer\":\"{\\\"answerContent\\\":\\\"A\\\",\\\"typeId\\\":2}\",\"question\":\"以下关于继承的叙述正确的是（）。\\nA、在Java中类只允许单一继承\\nB、在Java中一个类只能实现一个接口\\nC、在Java中一个类不能同时继承一个类和实现一个接口\\nD、在Java中接口只允许单一继承\",\"score\":5,\"tId\":59},{\"answer\":\"{\\\"answerContent\\\":\\\"D\\\",\\\"typeId\\\":2}\",\"question\":\"在使用interface声明一个接口时，只可以使用（  ）修饰符修饰该接口。\\nA、private B、protected C、private protected D、public\",\"score\":5,\"tId\":60},{\"answer\":\"{\\\"answerContent\\\":\\\"B\\\",\\\"typeId\\\":2}\",\"question\":\"Java源文件和编译后的文件扩展名分别为（  ）\\nA.class 和java B.java 和class C.class和class D.java和java\",\"score\":5,\"tId\":61}],\"3\":[{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"按照学生平均成绩(avg_grade) 将students表中的数据检索出来，下面SQL语句正确的是(  )\\nA) SELECT * FROM students ORDER BY avg_grade\\nB) SELECT * FROM students GROUP BY avg_grade ASC\\nC) SELECT * FROM students ORDER BY avg_grade DESC\\nD) SELECT * FROM students ORDER by avg_grade asc\",\"score\":5,\"tId\":71},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"B\\\\\\\",\\\\\\\"C\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下面哪些不是java的简单数据类型( )\\nA. short\\nB. Boolean\\nC. Double\\nD. float\",\"score\":5,\"tId\":74},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"不能用来修饰interface的有( )\\nA．private\\nB．public\\nC．protected\\nD．static\",\"score\":5,\"tId\":76},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列标识符不合法的有( )\\nA．new\\nB．$Usdollars\\nC．1234\\nD．car.taxi\",\"score\":5,\"tId\":79}],\"4\":[{\"answer\":\"{\\\"answerContent\\\":\\\"120\\\",\\\"typeId\\\":4}\",\"question\":\"设有数组定义：int MyIntArray[ ] = { 10 , 20 , 30 , 40 , 50 , 60 , 70}; 则执行以下几个语句后的输出结果是___。\\nint s = 0 ;\\nfor (int i = 0 ; i < MyIntArray.length ; i + + )\\n    if ( i % 2 = = 1 )    \\ns += MyIntArray[i] ;\\nSystem.out.println(s);\",\"score\":5,\"tId\":81},{\"answer\":\"{\\\"answerContent\\\":\\\"Hello! I love JAVA.\\\",\\\"typeId\\\":4}\",\"question\":\"下面程序的运行结果:____\\nimport java.io.*;\\npublic class abc\\n{   \\npublic static void main(String args [ ])\\n{    \\nAB s = new AB(\\\"Hello!\\\",\\\"I love JAVA.\\\");\\n         System.out.println(s.toString( ));\\n    }\\n}\\nclass AB {\\n  String s1;\\n  String s2;\\n  public AB(String str1, String str2)\\n  { \\ns1 = str1;  \\ns2 = str2; \\n}\\n  public String toString( )\\n  { \\nreturn s1+s2;\\n}\\n}\",\"score\":5,\"tId\":83},{\"answer\":\"{\\\"answerContent\\\":\\\"三角形\\\",\\\"typeId\\\":4}\",\"question\":\"以下程序段的输出结果是___\\nint x = 5, y = 6, z = 4;\\n\\tif (x + y > z && x + z > y && z + y > x)\\n\\t\\tSystem.out.println(\\\"三角形\\\");\\n\\telse\\n\\t\\tSystem.out.println(\\\"不是三角形\\\");\",\"score\":5,\"tId\":84},{\"answer\":\"{\\\"answerContent\\\":\\\"6 5 4 3 2\\\",\\\"typeId\\\":4}\",\"question\":\"下面程序段的执行结果是_____\\n\\nint a[] = { 2, 3, 4, 5, 6 };\\n\\tfor (int i = a.length - 1; i >= 0; i--)\\n\\t//这里的a表示你上面定义的那个整型一维数组，然后a.length表示a数组的长度,第一次i出去是4所以a【4】=6\\n\\t\\tSystem.out.print(a[i] + \\\"\\\"); \",\"score\":5,\"tId\":85}],\"5\":[{\"answer\":\"{\\\"answerContent\\\":\\\"import java.util.Scanner;\\\\npublic class Main{ \\\\n    public static void main(String[] args) { \\\\n        int a,b;\\\\n        Scanner scanner = new Scanner(System.in);\\\\n        a = scanner.nextInt();\\\\n        b = scanner.nextInt();\\\\n        System.out.println(a+b);\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"question\":\"两数之和：输入两个整数A，B返回A+B的值\",\"score\":10,\"tId\":97},{\"answer\":\"{\\\"answerContent\\\":\\\"import java.util.Scanner;\\\\nimport java.lang.Math;\\\\npublic class Main{ \\\\n    public static void main(String[] args) { \\\\n        int a;\\\\n        Scanner scanner = new Scanner(System.in);\\\\n        a = scanner.nextInt();\\\\n        System.out.println(mySqrt(a));\\\\n    }\\\\n\\\\npublic static int mySqrt(int x) {\\\\n        if (x == 0) {\\\\n            return 0;\\\\n        }\\\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"question\":\"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。\\n\\n由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。\",\"score\":10,\"tId\":98}]}', '2024-04-22 20:21:42', 1);
INSERT INTO `papers` VALUES (49, 22, 'asdasd', '{\"1\":[],\"2\":[{\"answer\":\"{\\\"answerContent\\\":\\\"B\\\",\\\"typeId\\\":2}\",\"question\":\"1+1=()\\nA: 1\\nB: 2\\nC: 3\\nD: 4\",\"score\":2,\"tId\":101}],\"3\":[],\"4\":[],\"5\":[]}', '2024-04-25 23:05:19', 1);
INSERT INTO `papers` VALUES (50, 22, 'Java毕设随机试卷', '{\"1\":[{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"score\":2,\"tId\":54},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"score\":2,\"tId\":55},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"在异常处理中，若try中的代码可能产生多种异常则可以对应多个catch语句，若catch中的参数类型有父类子类关系，此时应该将父类放在后面，子类放在前面。\",\"score\":2,\"tId\":57},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"1+1=2\",\"score\":2,\"tId\":91},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"JAVA程序的main方法必须写在类里面\",\"score\":2,\"tId\":104},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"不同类型的变量，可以起相同的名字\",\"score\":2,\"tId\":106},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"for循环体语句中，可以包含多条语句，但要用大括号括起来\",\"score\":2,\"tId\":108},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"for循环是先执行循环体语句，后进行条件判断\",\"score\":2,\"tId\":109},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"score\":2,\"tId\":54},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"score\":2,\"tId\":55}],\"2\":[{\"answer\":\"{\\\"answerContent\\\":\\\"B\\\",\\\"typeId\\\":2}\",\"question\":\"Java application中的主类需包含main方法，以下哪项是main方法的正确形参？\\nA、 String args B、String args[] C、Char arg D、StringBuffer args[]\",\"score\":2,\"tId\":58},{\"answer\":\"{\\\"answerContent\\\":\\\"B\\\",\\\"typeId\\\":2}\",\"question\":\"Java源文件和编译后的文件扩展名分别为（  ）\\nA.class 和java B.java 和class C.class和class D.java和java\",\"score\":2,\"tId\":61},{\"answer\":\"{\\\"answerContent\\\":\\\"D\\\",\\\"typeId\\\":2}\",\"question\":\"下列（  ）不是面向对象程序设计方法的特点。\\nA.封装 B.继承 C.多态 D.结构化\",\"score\":2,\"tId\":63},{\"answer\":\"{\\\"answerContent\\\":\\\"D\\\",\\\"typeId\\\":2}\",\"question\":\"下面的代码段执行之后count的值是什么（ ）。\\nint count = 1;\\nfor (int i = 1; i <= 5; i++) {//第一次i出去是1\\n\\tcount += i;}\\nSystem.out.println(count);\\nA、5 B、1 C、15 D、16\",\"score\":2,\"tId\":64},{\"answer\":\"{\\\"answerContent\\\":\\\"C\\\",\\\"typeId\\\":2}\",\"question\":\"下列哪一个import命令可以使我们在程序中创建输入/输出流对象（  ）。\\nA、import java.sql.; B、import java.util.;\\nC、import java.io.; D、import java.net.;\",\"score\":2,\"tId\":65},{\"answer\":\"{\\\"answerContent\\\":\\\"C\\\",\\\"typeId\\\":2}\",\"question\":\"如下哪个是Java中有效的关键字( )\\nA、name B、hello C、false D、good\",\"score\":2,\"tId\":68},{\"answer\":\"{\\\"answerContent\\\":\\\"B\\\",\\\"typeId\\\":2}\",\"question\":\"定义一个类，必须使用的关键字是( )\\nA、public B、class C、interface D、static\",\"score\":2,\"tId\":69},{\"answer\":\"{\\\"answerContent\\\":\\\"B\\\",\\\"typeId\\\":2}\",\"question\":\"1+1=()\\nA: 1\\nB: 2\\nC: 3\\nD: 4\",\"score\":2,\"tId\":101},{\"answer\":\"{\\\"answerContent\\\":\\\"A\\\",\\\"typeId\\\":2}\",\"question\":\"以下关于继承的叙述正确的是（）。\\nA、在Java中类只允许单一继承\\nB、在Java中一个类只能实现一个接口\\nC、在Java中一个类不能同时继承一个类和实现一个接口\\nD、在Java中接口只允许单一继承\",\"score\":2,\"tId\":59},{\"answer\":\"{\\\"answerContent\\\":\\\"B\\\",\\\"typeId\\\":2}\",\"question\":\"Java application中的主类需包含main方法，以下哪项是main方法的正确形参？\\nA、 String args B、String args[] C、Char arg D、StringBuffer args[]\",\"score\":2,\"tId\":58}],\"3\":[{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"按照学生平均成绩(avg_grade) 将students表中的数据检索出来，下面SQL语句正确的是(  )\\nA) SELECT * FROM students ORDER BY avg_grade\\nB) SELECT * FROM students GROUP BY avg_grade ASC\\nC) SELECT * FROM students ORDER BY avg_grade DESC\\nD) SELECT * FROM students ORDER by avg_grade asc\",\"score\":3,\"tId\":71},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"B\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"java8中，忽略内部接口的情况，在接口中以下哪条定义是正确的( )\\nA. void methoda();\\nB. public double methoda();\\nC. public final double methoda();\\nD. static void methoda(double d1);\",\"score\":3,\"tId\":72},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"不能用来修饰interface的有( )\\nA．private\\nB．public\\nC．protected\\nD．static\",\"score\":3,\"tId\":76},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列说法错误的有( )\\nA． 在类方法中可用this来调用本类的类方法\\nB． 在类方法中调用本类的类方法时可直接调用\\nC． 在类方法中只能调用本类中的类方法\\nD． 在类方法中绝对不能调用实例方法\",\"score\":3,\"tId\":77},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"B\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"如下代码,哪两个说明是正确的( )\\nclass A {\\n\\tA() { }\\n}\\n\\nclass B extends A {\\n}\\nA. B类的构造器应该是 public.\\nB. B类的构造器应该是没有参数\\nC. B类的构造器应该调用this().\\nD. B类的构造器应该调用super().\",\"score\":3,\"tId\":78},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"B\\\\\\\",\\\\\\\"A\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"java8中，忽略内部接口的情况，在接口中以下哪条定义是正确的?\\n\\nA. void methoda();\\n\\nB. public double methoda();\\n\\nC. public final double methoda();\\n\\nD. static void methoda(double d1);\",\"score\":3,\"tId\":111},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"B\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下面哪些语句能够正确地生成5个空字符串？\\n\\nA.String   a[]=new   String[5]；for(int   i=0；i<5；a[i++]=“”)；  \\n     \\n  B.String   a[]={“”，“”，“”，“”，“”}；     \\n  \\n  C.String   a[5]；     \\n  \\n  D.String[5]a； \",\"score\":3,\"tId\":113},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"B\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列说法错误的有\\n\\nA． 数组是一种对象\\n\\nB． 数组属于一种原生类\\n\\nC． int number=[]={31,23,33,43,35,63}\\n\\nD． 数组的大小可以任意改变\",\"score\":3,\"tId\":114},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"B\\\\\\\",\\\\\\\"C\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列是jsp作用域的通信对象的有（）\\n\\nA．Session\\n\\nB. application\\n\\nC.pageContext\\n\\nD.cookie\",\"score\":3,\"tId\":110},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列属于jsp中注释的有(  )\\nA．<%--  与 --%>\\nB． /\\nC． /** 与 **/\\nD．  <!-- 与 -->\",\"score\":3,\"tId\":70}],\"4\":[{\"answer\":\"{\\\"answerContent\\\":\\\"抽象方法\\\",\\\"typeId\\\":4}\",\"question\":\"接口中的方法只能是_____\",\"score\":4,\"tId\":82},{\"answer\":\"{\\\"answerContent\\\":\\\"6 5 4 3 2\\\",\\\"typeId\\\":4}\",\"question\":\"下面程序段的执行结果是_____\\n\\nint a[] = { 2, 3, 4, 5, 6 };\\n\\tfor (int i = a.length - 1; i >= 0; i--)\\n\\t//这里的a表示你上面定义的那个整型一维数组，然后a.length表示a数组的长度,第一次i出去是4所以a【4】=6\\n\\t\\tSystem.out.print(a[i] + \\\"\\\"); \",\"score\":4,\"tId\":85},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":4}\",\"question\":\"设 x = 2 ，则表达式 ( x + + )／3 的值是_____。\",\"score\":4,\"tId\":118},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":4}\",\"question\":\"设 x = 2 ，则表达式 ( x + + )／3 的值是___\",\"score\":4,\"tId\":80},{\"answer\":\"{\\\"answerContent\\\":\\\"120\\\",\\\"typeId\\\":4}\",\"question\":\"设有数组定义：int MyIntArray[ ] = { 10 , 20 , 30 , 40 , 50 , 60 , 70}; 则执行以下几个语句后的输出结果是___。\\nint s = 0 ;\\nfor (int i = 0 ; i < MyIntArray.length ; i + + )\\n    if ( i % 2 = = 1 )    \\ns += MyIntArray[i] ;\\nSystem.out.println(s);\",\"score\":4,\"tId\":81}],\"5\":[{\"answer\":\"{\\\"answerContent\\\":\\\"import java.util.Scanner;\\\\npublic class Main{ \\\\n    public static void main(String[] args) { \\\\n        int a,b;\\\\n        Scanner scanner = new Scanner(System.in);\\\\n        a = scanner.nextInt();\\\\n        b = scanner.nextInt();\\\\n        System.out.println(a+b);\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"question\":\"两数之和：输入两个整数A，B返回A+B的值\",\"score\":5,\"tId\":97},{\"answer\":\"{\\\"answerContent\\\":\\\"import java.util.Scanner;\\\\npublic class Main {\\\\n    public static void main(String[] args) {\\\\n        Scanner input=new Scanner(System.in);\\\\n        int score=input.nextInt();\\\\n        char grade=score>=90?\'A\':score>=60?\'B\':\'C\';\\\\n        System.out.println(grade);\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"question\":\"学习成绩> =90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。\",\"score\":5,\"tId\":123}]}', '2024-05-04 10:15:14', 1);
INSERT INTO `papers` VALUES (51, 22, 'testtt', '{\"1\":[{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"score\":2,\"tId\":54},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"score\":2,\"tId\":55},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"在异常处理中，若try中的代码可能产生多种异常则可以对应多个catch语句，若catch中的参数类型有父类子类关系，此时应该将父类放在后面，子类放在前面。\",\"score\":2,\"tId\":57},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"1+1=2\",\"score\":2,\"tId\":91},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"JAVA程序的main方法必须写在类里面\",\"score\":2,\"tId\":104},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"变量由字母、下划线、数字、$符号随意组成\",\"score\":2,\"tId\":105},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"不同类型的变量，可以起相同的名字\",\"score\":2,\"tId\":106},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"for循环是先执行循环体语句，后进行条件判断\",\"score\":2,\"tId\":109},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"score\":2,\"tId\":54},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"score\":2,\"tId\":55}],\"2\":[{\"answer\":\"{\\\"answerContent\\\":\\\"B\\\",\\\"typeId\\\":2}\",\"question\":\"Java application中的主类需包含main方法，以下哪项是main方法的正确形参？\\nA、 String args B、String args[] C、Char arg D、StringBuffer args[]\",\"score\":2,\"tId\":58},{\"answer\":\"{\\\"answerContent\\\":\\\"B\\\",\\\"typeId\\\":2}\",\"question\":\"Java源文件和编译后的文件扩展名分别为（  ）\\nA.class 和java B.java 和class C.class和class D.java和java\",\"score\":2,\"tId\":61},{\"answer\":\"{\\\"answerContent\\\":\\\"D\\\",\\\"typeId\\\":2}\",\"question\":\"下列（  ）不是面向对象程序设计方法的特点。\\nA.封装 B.继承 C.多态 D.结构化\",\"score\":2,\"tId\":63},{\"answer\":\"{\\\"answerContent\\\":\\\"D\\\",\\\"typeId\\\":2}\",\"question\":\"下面的代码段执行之后count的值是什么（ ）。\\nint count = 1;\\nfor (int i = 1; i <= 5; i++) {//第一次i出去是1\\n\\tcount += i;}\\nSystem.out.println(count);\\nA、5 B、1 C、15 D、16\",\"score\":2,\"tId\":64},{\"answer\":\"{\\\"answerContent\\\":\\\"C\\\",\\\"typeId\\\":2}\",\"question\":\"下列哪一个import命令可以使我们在程序中创建输入/输出流对象（  ）。\\nA、import java.sql.; B、import java.util.;\\nC、import java.io.; D、import java.net.;\",\"score\":2,\"tId\":65},{\"answer\":\"{\\\"answerContent\\\":\\\"B\\\",\\\"typeId\\\":2}\",\"question\":\"编译Java Application 源程序文件将产生相应的字节码文件，这些字节码文件的扩展名为(  )。\\nA. java B. .class\\nC. html D. .exe\",\"score\":2,\"tId\":66},{\"answer\":\"{\\\"answerContent\\\":\\\"A\\\",\\\"typeId\\\":2}\",\"question\":\"设 x = 1 , y = 2 , z = 3，则表达式 y＋＝z－－/＋＋x 的值是(  )。\\nA. 3 B. 3. 5 C. 4 D. 5\",\"score\":2,\"tId\":67},{\"answer\":\"{\\\"answerContent\\\":\\\"C\\\",\\\"typeId\\\":2}\",\"question\":\"如下哪个是Java中有效的关键字( )\\nA、name B、hello C、false D、good\",\"score\":2,\"tId\":68},{\"answer\":\"{\\\"answerContent\\\":\\\"A\\\",\\\"typeId\\\":2}\",\"question\":\"以下关于继承的叙述正确的是（）。\\nA、在Java中类只允许单一继承\\nB、在Java中一个类只能实现一个接口\\nC、在Java中一个类不能同时继承一个类和实现一个接口\\nD、在Java中接口只允许单一继承\",\"score\":2,\"tId\":59},{\"answer\":\"{\\\"answerContent\\\":\\\"B\\\",\\\"typeId\\\":2}\",\"question\":\"Java application中的主类需包含main方法，以下哪项是main方法的正确形参？\\nA、 String args B、String args[] C、Char arg D、StringBuffer args[]\",\"score\":2,\"tId\":58}],\"3\":[{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"B\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"java8中，忽略内部接口的情况，在接口中以下哪条定义是正确的( )\\nA. void methoda();\\nB. public double methoda();\\nC. public final double methoda();\\nD. static void methoda(double d1);\",\"score\":3,\"tId\":72},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"B\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列说法错误的有( )\\nA． 数组是一种对象\\nB． 数组属于一种原生类\\nC． int number=[]={31,23,33,43,35,63}\\nD． 数组的大小可以任意改变\",\"score\":3,\"tId\":75},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列说法错误的有( )\\nA． 在类方法中可用this来调用本类的类方法\\nB． 在类方法中调用本类的类方法时可直接调用\\nC． 在类方法中只能调用本类中的类方法\\nD． 在类方法中绝对不能调用实例方法\",\"score\":3,\"tId\":77},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"B\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"如下代码,哪两个说明是正确的( )\\nclass A {\\n\\tA() { }\\n}\\n\\nclass B extends A {\\n}\\nA. B类的构造器应该是 public.\\nB. B类的构造器应该是没有参数\\nC. B类的构造器应该调用this().\\nD. B类的构造器应该调用super().\",\"score\":3,\"tId\":78},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列标识符不合法的有( )\\nA．new\\nB．$Usdollars\\nC．1234\\nD．car.taxi\",\"score\":3,\"tId\":79},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"B\\\\\\\",\\\\\\\"A\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"java8中，忽略内部接口的情况，在接口中以下哪条定义是正确的?\\n\\nA. void methoda();\\n\\nB. public double methoda();\\n\\nC. public final double methoda();\\n\\nD. static void methoda(double d1);\",\"score\":3,\"tId\":111},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"不能用来修饰interface的有\\n\\nA．private\\n\\nB．public\\n\\nC．protected\\n\\nD．static\",\"score\":3,\"tId\":115},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"B\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"如下代码,哪两个说明是正确的？\\n\\nclass A {\\n\\tA() { }\\n}\\n\\nclass B extends A {\\n}\\n\\nA. B类的构造器应该是 public.\\n\\nB. B类的构造器应该是没有参数\\n\\nC. B类的构造器应该调用this().\\n\\nD. B类的构造器应该调用super().\",\"score\":3,\"tId\":117},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"B\\\\\\\",\\\\\\\"C\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列是jsp作用域的通信对象的有（）\\n\\nA．Session\\n\\nB. application\\n\\nC.pageContext\\n\\nD.cookie\",\"score\":3,\"tId\":110},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列属于jsp中注释的有(  )\\nA．<%--  与 --%>\\nB． /\\nC． /** 与 **/\\nD．  <!-- 与 -->\",\"score\":3,\"tId\":70}],\"4\":[{\"answer\":\"{\\\"answerContent\\\":\\\"父类\\\",\\\"typeId\\\":4}\",\"question\":\"Java语言只允许单继承，指每个类只能有一个_____。\",\"score\":4,\"tId\":120},{\"answer\":\"{\\\"answerContent\\\":\\\"类名\\\",\\\"typeId\\\":4}\",\"question\":\"构造方法是一种特殊的成员方法，构造方法名与_______相同\",\"score\":4,\"tId\":121},{\"answer\":\"{\\\"answerContent\\\":\\\"MyClass.java\\\",\\\"typeId\\\":4}\",\"question\":\"如果将类MyClass声明为public，它的文件名称必须是_________才能正常编译。\",\"score\":4,\"tId\":122},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":4}\",\"question\":\"设 x = 2 ，则表达式 ( x + + )／3 的值是___\",\"score\":4,\"tId\":80},{\"answer\":\"{\\\"answerContent\\\":\\\"120\\\",\\\"typeId\\\":4}\",\"question\":\"设有数组定义：int MyIntArray[ ] = { 10 , 20 , 30 , 40 , 50 , 60 , 70}; 则执行以下几个语句后的输出结果是___。\\nint s = 0 ;\\nfor (int i = 0 ; i < MyIntArray.length ; i + + )\\n    if ( i % 2 = = 1 )    \\ns += MyIntArray[i] ;\\nSystem.out.println(s);\",\"score\":4,\"tId\":81}],\"5\":[{\"answer\":\"{\\\"answerContent\\\":\\\"import java.util.Scanner;\\\\npublic class Main{ \\\\n    public static void main(String[] args) { \\\\n        int a,b;\\\\n        Scanner scanner = new Scanner(System.in);\\\\n        a = scanner.nextInt();\\\\n        b = scanner.nextInt();\\\\n        System.out.println(a+b);\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"question\":\"两数之和：输入两个整数A，B返回A+B的值\",\"score\":5,\"tId\":97},{\"answer\":\"{\\\"answerContent\\\":\\\"import java.util.Scanner;\\\\npublic class Main {\\\\n    public static void main(String[] args) {\\\\n        Scanner input=new Scanner(System.in);\\\\n        int score=input.nextInt();\\\\n        char grade=score>=90?\'A\':score>=60?\'B\':\'C\';\\\\n        System.out.println(grade);\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"question\":\"学习成绩> =90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。\",\"score\":5,\"tId\":123}]}', '2024-05-06 15:34:04', 0);
INSERT INTO `papers` VALUES (52, 22, 'testt', '{\"1\":[{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"score\":2,\"tId\":54},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"score\":2,\"tId\":55},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"在Java中对象可以赋值，只要使用赋值号（等号）即可，相当于生成了一个各属性与赋值对象相同的新对象。\",\"score\":2,\"tId\":56},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"在异常处理中，若try中的代码可能产生多种异常则可以对应多个catch语句，若catch中的参数类型有父类子类关系，此时应该将父类放在后面，子类放在前面。\",\"score\":2,\"tId\":57},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"JAVA程序的main方法必须写在类里面\",\"score\":2,\"tId\":104},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"变量由字母、下划线、数字、$符号随意组成\",\"score\":2,\"tId\":105},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"不同类型的变量，可以起相同的名字\",\"score\":2,\"tId\":106},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"for循环是先执行循环体语句，后进行条件判断\",\"score\":2,\"tId\":109},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":1}\",\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"score\":2,\"tId\":54},{\"answer\":\"{\\\"answerContent\\\":\\\"1\\\",\\\"typeId\\\":1}\",\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"score\":2,\"tId\":55}],\"2\":[{\"answer\":\"{\\\"answerContent\\\":\\\"D\\\",\\\"typeId\\\":2}\",\"question\":\"在使用interface声明一个接口时，只可以使用（  ）修饰符修饰该接口。\\nA、private B、protected C、private protected D、public\",\"score\":2,\"tId\":60},{\"answer\":\"{\\\"answerContent\\\":\\\"B\\\",\\\"typeId\\\":2}\",\"question\":\"Java源文件和编译后的文件扩展名分别为（  ）\\nA.class 和java B.java 和class C.class和class D.java和java\",\"score\":2,\"tId\":61},{\"answer\":\"{\\\"answerContent\\\":\\\"A\\\",\\\"typeId\\\":2}\",\"question\":\"Java“一次编译，随处运行”的特点在于其（  ）\\nA.跨平台性 B.面向对象型 C.多线程性 D.安全性\",\"score\":2,\"tId\":62},{\"answer\":\"{\\\"answerContent\\\":\\\"D\\\",\\\"typeId\\\":2}\",\"question\":\"下面的代码段执行之后count的值是什么（ ）。\\nint count = 1;\\nfor (int i = 1; i <= 5; i++) {//第一次i出去是1\\n\\tcount += i;}\\nSystem.out.println(count);\\nA、5 B、1 C、15 D、16\",\"score\":2,\"tId\":64},{\"answer\":\"{\\\"answerContent\\\":\\\"C\\\",\\\"typeId\\\":2}\",\"question\":\"下列哪一个import命令可以使我们在程序中创建输入/输出流对象（  ）。\\nA、import java.sql.; B、import java.util.;\\nC、import java.io.; D、import java.net.;\",\"score\":2,\"tId\":65},{\"answer\":\"{\\\"answerContent\\\":\\\"C\\\",\\\"typeId\\\":2}\",\"question\":\"如下哪个是Java中有效的关键字( )\\nA、name B、hello C、false D、good\",\"score\":2,\"tId\":68},{\"answer\":\"{\\\"answerContent\\\":\\\"B\\\",\\\"typeId\\\":2}\",\"question\":\"定义一个类，必须使用的关键字是( )\\nA、public B、class C、interface D、static\",\"score\":2,\"tId\":69},{\"answer\":\"{\\\"answerContent\\\":\\\"B\\\",\\\"typeId\\\":2}\",\"question\":\"1+1=()\\nA: 1\\nB: 2\\nC: 3\\nD: 4\",\"score\":2,\"tId\":101},{\"answer\":\"{\\\"answerContent\\\":\\\"A\\\",\\\"typeId\\\":2}\",\"question\":\"以下关于继承的叙述正确的是（）。\\nA、在Java中类只允许单一继承\\nB、在Java中一个类只能实现一个接口\\nC、在Java中一个类不能同时继承一个类和实现一个接口\\nD、在Java中接口只允许单一继承\",\"score\":2,\"tId\":59},{\"answer\":\"{\\\"answerContent\\\":\\\"D\\\",\\\"typeId\\\":2}\",\"question\":\"在使用interface声明一个接口时，只可以使用（  ）修饰符修饰该接口。\\nA、private B、protected C、private protected D、public\",\"score\":2,\"tId\":60}],\"3\":[{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"B\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下面哪个语句正确地声明一个整型的二维数组？\\nA. int a[10][10] = new int[][]；\\nB. int a[][] = new int[10][10]；\\nC. int [][]a = new int[10][10]；\\nD. int []a[] = new int[10][10]；\",\"score\":3,\"tId\":73},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"B\\\\\\\",\\\\\\\"C\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下面哪些不是java的简单数据类型( )\\nA. short\\nB. Boolean\\nC. Double\\nD. float\",\"score\":3,\"tId\":74},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"B\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列说法错误的有( )\\nA． 数组是一种对象\\nB． 数组属于一种原生类\\nC． int number=[]={31,23,33,43,35,63}\\nD． 数组的大小可以任意改变\",\"score\":3,\"tId\":75},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"不能用来修饰interface的有( )\\nA．private\\nB．public\\nC．protected\\nD．static\",\"score\":3,\"tId\":76},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列说法错误的有( )\\nA． 在类方法中可用this来调用本类的类方法\\nB． 在类方法中调用本类的类方法时可直接调用\\nC． 在类方法中只能调用本类中的类方法\\nD． 在类方法中绝对不能调用实例方法\",\"score\":3,\"tId\":77},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"不能用来修饰interface的有\\n\\nA．private\\n\\nB．public\\n\\nC．protected\\n\\nD．static\",\"score\":3,\"tId\":115},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列说法错误的有\\n\\nA． 在类方法中可用this来调用本类的类方法\\n\\nB． 在类方法中调用本类的类方法时可直接调用\\n\\nC． 在类方法中只能调用本类中的类方法\\n\\nD． 在类方法中绝对不能调用实例方法\",\"score\":3,\"tId\":116},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"B\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"如下代码,哪两个说明是正确的？\\n\\nclass A {\\n\\tA() { }\\n}\\n\\nclass B extends A {\\n}\\n\\nA. B类的构造器应该是 public.\\n\\nB. B类的构造器应该是没有参数\\n\\nC. B类的构造器应该调用this().\\n\\nD. B类的构造器应该调用super().\",\"score\":3,\"tId\":117},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"B\\\\\\\",\\\\\\\"C\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列是jsp作用域的通信对象的有（）\\n\\nA．Session\\n\\nB. application\\n\\nC.pageContext\\n\\nD.cookie\",\"score\":3,\"tId\":110},{\"answer\":\"{\\\"answerContent\\\":\\\"[\\\\\\\"A\\\\\\\",\\\\\\\"D\\\\\\\"]\\\",\\\"typeId\\\":3}\",\"question\":\"下列属于jsp中注释的有(  )\\nA．<%--  与 --%>\\nB． /\\nC． /** 与 **/\\nD．  <!-- 与 -->\",\"score\":3,\"tId\":70}],\"4\":[{\"answer\":\"{\\\"answerContent\\\":\\\"抽象方法\\\",\\\"typeId\\\":4}\",\"question\":\"接口中的方法只能是_____\",\"score\":4,\"tId\":82},{\"answer\":\"{\\\"answerContent\\\":\\\"Hello! I love JAVA.\\\",\\\"typeId\\\":4}\",\"question\":\"下面程序的运行结果:____\\nimport java.io.*;\\npublic class abc\\n{   \\npublic static void main(String args [ ])\\n{    \\nAB s = new AB(\\\"Hello!\\\",\\\"I love JAVA.\\\");\\n         System.out.println(s.toString( ));\\n    }\\n}\\nclass AB {\\n  String s1;\\n  String s2;\\n  public AB(String str1, String str2)\\n  { \\ns1 = str1;  \\ns2 = str2; \\n}\\n  public String toString( )\\n  { \\nreturn s1+s2;\\n}\\n}\",\"score\":4,\"tId\":83},{\"answer\":\"{\\\"answerContent\\\":\\\"父类\\\",\\\"typeId\\\":4}\",\"question\":\"Java语言只允许单继承，指每个类只能有一个_____。\",\"score\":4,\"tId\":120},{\"answer\":\"{\\\"answerContent\\\":\\\"0\\\",\\\"typeId\\\":4}\",\"question\":\"设 x = 2 ，则表达式 ( x + + )／3 的值是___\",\"score\":4,\"tId\":80},{\"answer\":\"{\\\"answerContent\\\":\\\"120\\\",\\\"typeId\\\":4}\",\"question\":\"设有数组定义：int MyIntArray[ ] = { 10 , 20 , 30 , 40 , 50 , 60 , 70}; 则执行以下几个语句后的输出结果是___。\\nint s = 0 ;\\nfor (int i = 0 ; i < MyIntArray.length ; i + + )\\n    if ( i % 2 = = 1 )    \\ns += MyIntArray[i] ;\\nSystem.out.println(s);\",\"score\":4,\"tId\":81}],\"5\":[{\"answer\":\"{\\\"answerContent\\\":\\\"import java.util.Scanner;\\\\npublic class Main{ \\\\n    public static void main(String[] args) { \\\\n        int a,b;\\\\n        Scanner scanner = new Scanner(System.in);\\\\n        a = scanner.nextInt();\\\\n        b = scanner.nextInt();\\\\n        System.out.println(a+b);\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"question\":\"两数之和：输入两个整数A，B返回A+B的值\",\"score\":5,\"tId\":97},{\"answer\":\"{\\\"answerContent\\\":\\\"import java.util.Scanner;\\\\npublic class Main {\\\\n    public static void main(String[] args) {\\\\n        Scanner input=new Scanner(System.in);\\\\n        int score=input.nextInt();\\\\n        char grade=score>=90?\'A\':score>=60?\'B\':\'C\';\\\\n        System.out.println(grade);\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"question\":\"学习成绩> =90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。\",\"score\":5,\"tId\":123}]}', '2024-05-06 17:44:25', 1);

-- ----------------------------
-- Table structure for program_test_case
-- ----------------------------
DROP TABLE IF EXISTS `program_test_case`;
CREATE TABLE `program_test_case`  (
  `pt_id` int NOT NULL AUTO_INCREMENT,
  `t_id` int NULL DEFAULT NULL,
  `test_in_1` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `test_out_1` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `test_in_2` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `test_out_2` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `test_in_3` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `test_out_3` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`pt_id`) USING BTREE,
  UNIQUE INDEX `unique_t_id`(`t_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 9 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of program_test_case
-- ----------------------------
INSERT INTO `program_test_case` VALUES (2, 97, '1 2', '3\n', '2 3', '5\n', '2 4', '6\n');
INSERT INTO `program_test_case` VALUES (3, 98, '4', '2\n', '8', '2\n', '9', '3\n');
INSERT INTO `program_test_case` VALUES (6, 103, '10086', '68001\n', '10010', '1001\n', '-100', '-1\n');
INSERT INTO `program_test_case` VALUES (7, 123, '40', 'C\n', '60', 'B\n', '90', 'A\n');
INSERT INTO `program_test_case` VALUES (8, 124, '40', 'C\n', '60', 'B\n', '90', 'A\n');

-- ----------------------------
-- Table structure for role
-- ----------------------------
DROP TABLE IF EXISTS `role`;
CREATE TABLE `role`  (
  `r_id` int NOT NULL COMMENT '角色ID',
  `name` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NULL DEFAULT NULL COMMENT '角色名称',
  PRIMARY KEY (`r_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb3 COLLATE = utf8mb3_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of role
-- ----------------------------
INSERT INTO `role` VALUES (0, '管理员');
INSERT INTO `role` VALUES (1, '学生');
INSERT INTO `role` VALUES (2, '教师');

-- ----------------------------
-- Table structure for student_course
-- ----------------------------
DROP TABLE IF EXISTS `student_course`;
CREATE TABLE `student_course`  (
  `uc_id` int NOT NULL AUTO_INCREMENT,
  `u_id` int NULL DEFAULT NULL COMMENT '学生ID',
  `c_id` int NULL DEFAULT NULL COMMENT '课程ID',
  PRIMARY KEY (`uc_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 25 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of student_course
-- ----------------------------
INSERT INTO `student_course` VALUES (23, 23, 41);
INSERT INTO `student_course` VALUES (24, 23, 42);

-- ----------------------------
-- Table structure for student_exam
-- ----------------------------
DROP TABLE IF EXISTS `student_exam`;
CREATE TABLE `student_exam`  (
  `se_id` int NOT NULL AUTO_INCREMENT,
  `u_id` int NULL DEFAULT NULL COMMENT '学生ID',
  `e_id` int NULL DEFAULT NULL COMMENT '考试ID',
  `right_student_answer` text CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NULL COMMENT '整张试卷的正确答案，可以存储成Json格式的字符串',
  `score` double NULL DEFAULT NULL COMMENT '成绩',
  `review` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NULL DEFAULT '' COMMENT '评论',
  `create_time` datetime NULL DEFAULT NULL COMMENT '提交试卷时间',
  PRIMARY KEY (`se_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 40 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of student_exam
-- ----------------------------
INSERT INTO `student_exam` VALUES (30, 23, 23, '{\"totalScore\":2.0,\"content\":[{\"score\":1,\"rightAnswer\":\"1\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"判断题：对\",\"getScore\":1.0,\"tId\":43},{\"score\":2,\"rightAnswer\":\"A\",\"answer\":{\"answerContent\":\"B\",\"typeId\":2},\"question\":\"单选题A\",\"getScore\":0.0,\"tId\":44},{\"score\":2,\"rightAnswer\":\"[\\\"A\\\",\\\"B\\\"]\",\"answer\":{\"answerContent\":[\"C\",\"D\"],\"typeId\":3},\"question\":\"多选题AB\",\"getScore\":1.0,\"tId\":45},{\"score\":2,\"rightAnswer\":\"ASD\",\"answer\":{\"answerContent\":\"asd\",\"typeId\":4},\"question\":\"填空题___ASD\",\"getScore\":0.0,\"tId\":46},{\"score\":5,\"rightAnswer\":\"asdasd\",\"answer\":{\"answerContent\":\"ASDAD\",\"typeId\":5},\"question\":\"主观题____asdasd\",\"getScore\":0.0,\"tId\":47}]}', 2, '', '2024-03-22 00:32:05');
INSERT INTO `student_exam` VALUES (31, 23, 25, '{\"totalScore\":32.0,\"content\":[{\"score\":5,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"getScore\":0.0,\"tId\":54},{\"score\":5,\"rightAnswer\":\"1\",\"answer\":{\"answerContent\":0,\"typeId\":1},\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"getScore\":0.0,\"tId\":55},{\"score\":5,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"在Java中对象可以赋值，只要使用赋值号（等号）即可，相当于生成了一个各属性与赋值对象相同的新对象。\",\"getScore\":0.0,\"tId\":56},{\"score\":5,\"rightAnswer\":\"1\",\"answer\":{\"answerContent\":0,\"typeId\":1},\"question\":\"在异常处理中，若try中的代码可能产生多种异常则可以对应多个catch语句，若catch中的参数类型有父类子类关系，此时应该将父类放在后面，子类放在前面。\",\"getScore\":0.0,\"tId\":57},{\"score\":4,\"rightAnswer\":\"D\",\"answer\":{\"answerContent\":\"B\",\"typeId\":2},\"question\":\"下面的代码段执行之后count的值是什么（ ）。\\nint count = 1;\\nfor (int i = 1; i <= 5; i++) {//第一次i出去是1\\n\\tcount += i;}\\nSystem.out.println(count);\\nA、5 B、1 C、15 D、16\",\"getScore\":0.0,\"tId\":64},{\"score\":4,\"rightAnswer\":\"C\",\"answer\":{\"answerContent\":\"C\",\"typeId\":2},\"question\":\"下列哪一个import命令可以使我们在程序中创建输入/输出流对象（  ）。\\nA、import java.sql.; B、import java.util.;\\nC、import java.io.; D、import java.net.;\",\"getScore\":4.0,\"tId\":65},{\"score\":4,\"rightAnswer\":\"B\",\"answer\":{\"answerContent\":\"B\",\"typeId\":2},\"question\":\"编译Java Application 源程序文件将产生相应的字节码文件，这些字节码文件的扩展名为(  )。\\nA. java B. .class\\nC. html D. .exe\",\"getScore\":4.0,\"tId\":66},{\"score\":4,\"rightAnswer\":\"A\",\"answer\":{\"answerContent\":\"C\",\"typeId\":2},\"question\":\"设 x = 1 , y = 2 , z = 3，则表达式 y＋＝z－－/＋＋x 的值是(  )。\\nA. 3 B. 3. 5 C. 4 D. 5\",\"getScore\":0.0,\"tId\":67},{\"score\":4,\"rightAnswer\":\"C\",\"answer\":{\"answerContent\":\"C\",\"typeId\":2},\"question\":\"如下哪个是Java中有效的关键字( )\\nA、name B、hello C、false D、good\",\"getScore\":4.0,\"tId\":68},{\"score\":4,\"rightAnswer\":\"[\\\"A\\\",\\\"D\\\"]\",\"answer\":{\"answerContent\":[\"C\",\"D\"],\"typeId\":3},\"question\":\"下列属于jsp中注释的有(  )\\nA．<%--  与 --%>\\nB． /\\nC． /** 与 **/\\nD．  <!-- 与 -->\",\"getScore\":2.0,\"tId\":70},{\"score\":4,\"rightAnswer\":\"[\\\"B\\\",\\\"C\\\"]\",\"answer\":{\"answerContent\":[\"C\",\"D\"],\"typeId\":3},\"question\":\"下面哪些不是java的简单数据类型( )\\nA. short\\nB. Boolean\\nC. Double\\nD. float\",\"getScore\":2.0,\"tId\":74},{\"score\":4,\"rightAnswer\":\"[\\\"B\\\",\\\"C\\\",\\\"D\\\"]\",\"answer\":{\"answerContent\":[\"C\",\"B\"],\"typeId\":3},\"question\":\"下列说法错误的有( )\\nA． 数组是一种对象\\nB． 数组属于一种原生类\\nC． int number=[]={31,23,33,43,35,63}\\nD． 数组的大小可以任意改变\",\"getScore\":2.0,\"tId\":75},{\"score\":4,\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\"]\",\"answer\":{\"answerContent\":[\"A\",\"C\"],\"typeId\":3},\"question\":\"不能用来修饰interface的有( )\\nA．private\\nB．public\\nC．protected\\nD．static\",\"getScore\":4.0,\"tId\":76},{\"score\":4,\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\",\\\"D\\\"]\",\"answer\":{\"answerContent\":[\"B\",\"C\"],\"typeId\":3},\"question\":\"下列说法错误的有( )\\nA． 在类方法中可用this来调用本类的类方法\\nB． 在类方法中调用本类的类方法时可直接调用\\nC． 在类方法中只能调用本类中的类方法\\nD． 在类方法中绝对不能调用实例方法\",\"getScore\":2.0,\"tId\":77},{\"score\":4,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":\"0\",\"typeId\":4},\"question\":\"设 x = 2 ，则表达式 ( x + + )／3 的值是___\",\"getScore\":4.0,\"tId\":80},{\"score\":4,\"rightAnswer\":\"Hello! I love JAVA.\",\"answer\":{\"answerContent\":\"Hello!I love JAVA.\",\"typeId\":4},\"question\":\"下面程序的运行结果:____\\nimport java.io.*;\\npublic class abc\\n{   \\npublic static void main(String args [ ])\\n{    \\nAB s = new AB(\\\"Hello!\\\",\\\"I love JAVA.\\\");\\n         System.out.println(s.toString( ));\\n    }\\n}\\nclass AB {\\n  String s1;\\n  String s2;\\n  public AB(String str1, String str2)\\n  { \\ns1 = str1;  \\ns2 = str2; \\n}\\n  public String toString( )\\n  { \\nreturn s1+s2;\\n}\\n}\",\"getScore\":0.0,\"tId\":83},{\"score\":4,\"rightAnswer\":\"三角形\",\"answer\":{\"answerContent\":\"三角形\",\"typeId\":4},\"question\":\"以下程序段的输出结果是___\\nint x = 5, y = 6, z = 4;\\n\\tif (x + y > z && x + z > y && z + y > x)\\n\\t\\tSystem.out.println(\\\"三角形\\\");\\n\\telse\\n\\t\\tSystem.out.println(\\\"不是三角形\\\");\",\"getScore\":4.0,\"tId\":84},{\"score\":4,\"rightAnswer\":\"6 5 4 3 2\",\"answer\":{\"answerContent\":\"23456\",\"typeId\":4},\"question\":\"下面程序段的执行结果是_____\\n\\nint a[] = { 2, 3, 4, 5, 6 };\\n\\tfor (int i = a.length - 1; i >= 0; i--)\\n\\t//这里的a表示你上面定义的那个整型一维数组，然后a.length表示a数组的长度,第一次i出去是4所以a【4】=6\\n\\t\\tSystem.out.print(a[i] + \\\"\\\"); \",\"getScore\":0.0,\"tId\":85},{\"score\":4,\"rightAnswer\":\"类名\",\"answer\":{\"answerContent\":\"sdf\",\"typeId\":4},\"question\":\"构造方法是一种特殊的成员方法，构造方法名与_____ 相同。\",\"getScore\":0.0,\"tId\":86},{\"score\":10,\"rightAnswer\":\"public class  HelloJava {  //类定义正确3分\\n\\tpublic static void main(String[] args) {//2分\\n\\t\\tSystem.out.println(\\\"学号=2013001，姓名=张三\\\");//5分\\n\\t}\\n}\",\"answer\":{\"answerContent\":\"asdasd\",\"typeId\":5},\"question\":\"用Java Application编写一个程序，输出你的班级和姓名。\",\"getScore\":0.0,\"tId\":87},{\"score\":10,\"rightAnswer\":\"public class Programming16 {\\n    public static void main(String[] args) {\\n        for (int i = 1; i < 10; i++) {\\n            for (int j = 1; j <= i; j++) {\\n                System.out.print(j + \\\"*\\\" + i + \\\"=\\\" + j * i + \\\"\\\\t\\\");\\n            }\\n            System.out.println();\\n        }\\n    }\\n}\",\"answer\":{\"answerContent\":\"asdassad\",\"typeId\":5},\"question\":\"规范输出9*9乘法表\",\"getScore\":0.0,\"tId\":90}]}', 32, '', '2024-03-24 04:30:11');
INSERT INTO `student_exam` VALUES (32, 23, 26, '{\"totalScore\":28.0,\"content\":[{\"score\":5,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":0,\"typeId\":1},\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"getScore\":5.0,\"tId\":54},{\"score\":5,\"rightAnswer\":\"1\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"getScore\":5.0,\"tId\":55},{\"score\":5,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"在Java中对象可以赋值，只要使用赋值号（等号）即可，相当于生成了一个各属性与赋值对象相同的新对象。\",\"getScore\":0.0,\"tId\":56},{\"score\":5,\"rightAnswer\":\"1\",\"answer\":{\"answerContent\":0,\"typeId\":1},\"question\":\"在异常处理中，若try中的代码可能产生多种异常则可以对应多个catch语句，若catch中的参数类型有父类子类关系，此时应该将父类放在后面，子类放在前面。\",\"getScore\":0.0,\"tId\":57},{\"score\":4,\"rightAnswer\":\"D\",\"answer\":{\"answerContent\":\"A\",\"typeId\":2},\"question\":\"下面的代码段执行之后count的值是什么（ ）。\\nint count = 1;\\nfor (int i = 1; i <= 5; i++) {//第一次i出去是1\\n\\tcount += i;}\\nSystem.out.println(count);\\nA、5 B、1 C、15 D、16\",\"getScore\":0.0,\"tId\":64},{\"score\":4,\"rightAnswer\":\"C\",\"answer\":{\"answerContent\":\"B\",\"typeId\":2},\"question\":\"下列哪一个import命令可以使我们在程序中创建输入/输出流对象（  ）。\\nA、import java.sql.; B、import java.util.;\\nC、import java.io.; D、import java.net.;\",\"getScore\":0.0,\"tId\":65},{\"score\":4,\"rightAnswer\":\"B\",\"answer\":{\"answerContent\":\"B\",\"typeId\":2},\"question\":\"编译Java Application 源程序文件将产生相应的字节码文件，这些字节码文件的扩展名为(  )。\\nA. java B. .class\\nC. html D. .exe\",\"getScore\":4.0,\"tId\":66},{\"score\":4,\"rightAnswer\":\"A\",\"answer\":{\"answerContent\":\"B\",\"typeId\":2},\"question\":\"设 x = 1 , y = 2 , z = 3，则表达式 y＋＝z－－/＋＋x 的值是(  )。\\nA. 3 B. 3. 5 C. 4 D. 5\",\"getScore\":0.0,\"tId\":67},{\"score\":4,\"rightAnswer\":\"C\",\"answer\":{\"answerContent\":\"B\",\"typeId\":2},\"question\":\"如下哪个是Java中有效的关键字( )\\nA、name B、hello C、false D、good\",\"getScore\":0.0,\"tId\":68},{\"score\":4,\"rightAnswer\":\"[\\\"A\\\",\\\"D\\\"]\",\"answer\":{\"answerContent\":[\"C\",\"B\"],\"typeId\":3},\"question\":\"下列属于jsp中注释的有(  )\\nA．<%--  与 --%>\\nB． /\\nC． /** 与 **/\\nD．  <!-- 与 -->\",\"getScore\":2.0,\"tId\":70},{\"score\":4,\"rightAnswer\":\"[\\\"B\\\",\\\"C\\\"]\",\"answer\":{\"answerContent\":[\"C\",\"D\"],\"typeId\":3},\"question\":\"下面哪些不是java的简单数据类型( )\\nA. short\\nB. Boolean\\nC. Double\\nD. float\",\"getScore\":2.0,\"tId\":74},{\"score\":4,\"rightAnswer\":\"[\\\"B\\\",\\\"C\\\",\\\"D\\\"]\",\"answer\":{\"answerContent\":[\"B\",\"C\"],\"typeId\":3},\"question\":\"下列说法错误的有( )\\nA． 数组是一种对象\\nB． 数组属于一种原生类\\nC． int number=[]={31,23,33,43,35,63}\\nD． 数组的大小可以任意改变\",\"getScore\":2.0,\"tId\":75},{\"score\":4,\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\"]\",\"answer\":{\"answerContent\":[\"B\",\"C\"],\"typeId\":3},\"question\":\"不能用来修饰interface的有( )\\nA．private\\nB．public\\nC．protected\\nD．static\",\"getScore\":2.0,\"tId\":76},{\"score\":4,\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\",\\\"D\\\"]\",\"answer\":{\"answerContent\":[\"B\",\"C\"],\"typeId\":3},\"question\":\"下列说法错误的有( )\\nA． 在类方法中可用this来调用本类的类方法\\nB． 在类方法中调用本类的类方法时可直接调用\\nC． 在类方法中只能调用本类中的类方法\\nD． 在类方法中绝对不能调用实例方法\",\"getScore\":2.0,\"tId\":77},{\"score\":4,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":\"0\",\"typeId\":4},\"question\":\"设 x = 2 ，则表达式 ( x + + )／3 的值是___\",\"getScore\":4.0,\"tId\":80},{\"score\":4,\"rightAnswer\":\"Hello! I love JAVA.\",\"answer\":{\"answerContent\":\"123\",\"typeId\":4},\"question\":\"下面程序的运行结果:____\\nimport java.io.*;\\npublic class abc\\n{   \\npublic static void main(String args [ ])\\n{    \\nAB s = new AB(\\\"Hello!\\\",\\\"I love JAVA.\\\");\\n         System.out.println(s.toString( ));\\n    }\\n}\\nclass AB {\\n  String s1;\\n  String s2;\\n  public AB(String str1, String str2)\\n  { \\ns1 = str1;  \\ns2 = str2; \\n}\\n  public String toString( )\\n  { \\nreturn s1+s2;\\n}\\n}\",\"getScore\":0.0,\"tId\":83},{\"score\":4,\"rightAnswer\":\"三角形\",\"answer\":{\"answerContent\":\"123\",\"typeId\":4},\"question\":\"以下程序段的输出结果是___\\nint x = 5, y = 6, z = 4;\\n\\tif (x + y > z && x + z > y && z + y > x)\\n\\t\\tSystem.out.println(\\\"三角形\\\");\\n\\telse\\n\\t\\tSystem.out.println(\\\"不是三角形\\\");\",\"getScore\":0.0,\"tId\":84},{\"score\":4,\"rightAnswer\":\"6 5 4 3 2\",\"answer\":{\"answerContent\":\"123\",\"typeId\":4},\"question\":\"下面程序段的执行结果是_____\\n\\nint a[] = { 2, 3, 4, 5, 6 };\\n\\tfor (int i = a.length - 1; i >= 0; i--)\\n\\t//这里的a表示你上面定义的那个整型一维数组，然后a.length表示a数组的长度,第一次i出去是4所以a【4】=6\\n\\t\\tSystem.out.print(a[i] + \\\"\\\"); \",\"getScore\":0.0,\"tId\":85},{\"score\":4,\"rightAnswer\":\"类名\",\"answer\":{\"answerContent\":\"123\",\"typeId\":4},\"question\":\"构造方法是一种特殊的成员方法，构造方法名与_____ 相同。\",\"getScore\":0.0,\"tId\":86},{\"score\":10,\"rightAnswer\":\"public class  HelloJava {  //类定义正确3分\\n\\tpublic static void main(String[] args) {//2分\\n\\t\\tSystem.out.println(\\\"学号=2013001，姓名=张三\\\");//5分\\n\\t}\\n}\",\"answer\":{\"answerContent\":\"123\",\"typeId\":5},\"question\":\"用Java Application编写一个程序，输出你的班级和姓名。\",\"getScore\":0.0,\"tId\":87},{\"score\":10,\"rightAnswer\":\"public class Programming16 {\\n    public static void main(String[] args) {\\n        for (int i = 1; i < 10; i++) {\\n            for (int j = 1; j <= i; j++) {\\n                System.out.print(j + \\\"*\\\" + i + \\\"=\\\" + j * i + \\\"\\\\t\\\");\\n            }\\n            System.out.println();\\n        }\\n    }\\n}\",\"answer\":{\"answerContent\":\"123\",\"typeId\":5},\"question\":\"规范输出9*9乘法表\",\"getScore\":0.0,\"tId\":90}]}', 28, '', '2024-03-24 11:16:36');
INSERT INTO `student_exam` VALUES (36, 23, 28, '{\"totalScore\":11.0,\"content\":[{\"score\":1,\"rightAnswer\":\"1\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"1+1=2\",\"getScore\":1.0,\"tId\":91},{\"score\":5,\"rightAnswer\":\"{\\\"answerContent\\\":\\\"import java.util.Scanner;\\\\npublic class Main{ \\\\n    public static void main(String[] args) { \\\\n        int a,b;\\\\n        Scanner scanner = new Scanner(System.in);\\\\n        a = scanner.nextInt();\\\\n        b = scanner.nextInt();\\\\n        System.out.println(a+b);\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"answer\":{\"answerContent\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a,b;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        b = scanner.nextInt();\\n        System.out.println(a+b);\\n    }\\n}\",\"typeId\":5},\"question\":\"两数之和\",\"getScore\":5.0,\"tId\":97},{\"score\":5,\"rightAnswer\":\"{\\\"answerContent\\\":\\\"import java.util.*;\\\\nimport java.lang.Math;\\\\npublic class Main{ \\\\n    public static void main(String[] args) { \\\\n        int a;\\\\n        Scanner scanner = new Scanner(System.in);\\\\n        a = scanner.nextInt();\\\\n        int c = mySqrt(a);\\\\n        System.out.println(c);\\\\n    }\\\\npublic static int mySqrt(int x) {\\\\n        if (x == 0) {\\\\n            return 0;\\\\n        }\\\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\\\n    }\\\\n}\\\",\\\"typeId\\\":5}\",\"answer\":{\"answerContent\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        System.out.println(mySqrt(a));\\n    }\\n\\npublic static int mySqrt(int x) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\n    }\\n}\",\"typeId\":5},\"question\":\"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。\\n\\n由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。\",\"getScore\":5.0,\"tId\":98}]}', 11, '', '2024-04-02 23:27:46');
INSERT INTO `student_exam` VALUES (37, 23, 29, '{\"totalScore\":25.0,\"content\":[{\"score\":1,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"getScore\":0.0,\"tId\":54},{\"score\":1,\"rightAnswer\":\"1\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"getScore\":1.0,\"tId\":55},{\"score\":1,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"在Java中对象可以赋值，只要使用赋值号（等号）即可，相当于生成了一个各属性与赋值对象相同的新对象。\",\"getScore\":0.0,\"tId\":56},{\"score\":1,\"rightAnswer\":\"1\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"在异常处理中，若try中的代码可能产生多种异常则可以对应多个catch语句，若catch中的参数类型有父类子类关系，此时应该将父类放在后面，子类放在前面。\",\"getScore\":1.0,\"tId\":57},{\"score\":1,\"rightAnswer\":\"1\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"1+1=2\",\"getScore\":1.0,\"tId\":91},{\"score\":2,\"rightAnswer\":\"A\",\"answer\":{\"answerContent\":\"A\",\"typeId\":2},\"question\":\"以下关于继承的叙述正确的是（）。\\nA、在Java中类只允许单一继承\\nB、在Java中一个类只能实现一个接口\\nC、在Java中一个类不能同时继承一个类和实现一个接口\\nD、在Java中接口只允许单一继承\",\"getScore\":2.0,\"tId\":59},{\"score\":2,\"rightAnswer\":\"D\",\"answer\":{\"answerContent\":\"A\",\"typeId\":2},\"question\":\"在使用interface声明一个接口时，只可以使用（  ）修饰符修饰该接口。\\nA、private B、protected C、private protected D、public\",\"getScore\":0.0,\"tId\":60},{\"score\":2,\"rightAnswer\":\"B\",\"answer\":{\"answerContent\":\"A\",\"typeId\":2},\"question\":\"Java源文件和编译后的文件扩展名分别为（  ）\\nA.class 和java B.java 和class C.class和class D.java和java\",\"getScore\":0.0,\"tId\":61},{\"score\":2,\"rightAnswer\":\"A\",\"answer\":{\"answerContent\":\"A\",\"typeId\":2},\"question\":\"Java“一次编译，随处运行”的特点在于其（  ）\\nA.跨平台性 B.面向对象型 C.多线程性 D.安全性\",\"getScore\":2.0,\"tId\":62},{\"score\":2,\"rightAnswer\":\"D\",\"answer\":{\"answerContent\":\"A\",\"typeId\":2},\"question\":\"下列（  ）不是面向对象程序设计方法的特点。\\nA.封装 B.继承 C.多态 D.结构化\",\"getScore\":0.0,\"tId\":63},{\"score\":2,\"rightAnswer\":\"[\\\"B\\\",\\\"C\\\",\\\"D\\\"]\",\"answer\":{\"answerContent\":[\"A\"],\"typeId\":3},\"question\":\"下列说法错误的有( )\\nA． 数组是一种对象\\nB． 数组属于一种原生类\\nC． int number=[]={31,23,33,43,35,63}\\nD． 数组的大小可以任意改变\",\"getScore\":1.0,\"tId\":75},{\"score\":2,\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\"]\",\"answer\":{\"answerContent\":[\"A\"],\"typeId\":3},\"question\":\"不能用来修饰interface的有( )\\nA．private\\nB．public\\nC．protected\\nD．static\",\"getScore\":1.0,\"tId\":76},{\"score\":2,\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\",\\\"D\\\"]\",\"answer\":{\"answerContent\":[\"A\"],\"typeId\":3},\"question\":\"下列说法错误的有( )\\nA． 在类方法中可用this来调用本类的类方法\\nB． 在类方法中调用本类的类方法时可直接调用\\nC． 在类方法中只能调用本类中的类方法\\nD． 在类方法中绝对不能调用实例方法\",\"getScore\":1.0,\"tId\":77},{\"score\":2,\"rightAnswer\":\"[\\\"B\\\",\\\"D\\\"]\",\"answer\":{\"answerContent\":[\"A\"],\"typeId\":3},\"question\":\"如下代码,哪两个说明是正确的( )\\nclass A {\\n\\tA() { }\\n}\\n\\nclass B extends A {\\n}\\nA. B类的构造器应该是 public.\\nB. B类的构造器应该是没有参数\\nC. B类的构造器应该调用this().\\nD. B类的构造器应该调用super().\",\"getScore\":1.0,\"tId\":78},{\"score\":2,\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\",\\\"D\\\"]\",\"answer\":{\"answerContent\":[\"A\",\"D\",\"C\"],\"typeId\":3},\"question\":\"下列标识符不合法的有( )\\nA．new\\nB．$Usdollars\\nC．1234\\nD．car.taxi\",\"getScore\":2.0,\"tId\":79},{\"score\":2,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":\"0\",\"typeId\":4},\"question\":\"设 x = 2 ，则表达式 ( x + + )／3 的值是___\",\"getScore\":2.0,\"tId\":80},{\"score\":2,\"rightAnswer\":\"120\",\"answer\":{\"answerContent\":\"1\",\"typeId\":4},\"question\":\"设有数组定义：int MyIntArray[ ] = { 10 , 20 , 30 , 40 , 50 , 60 , 70}; 则执行以下几个语句后的输出结果是___。\\nint s = 0 ;\\nfor (int i = 0 ; i < MyIntArray.length ; i + + )\\n    if ( i % 2 = = 1 )    \\ns += MyIntArray[i] ;\\nSystem.out.println(s);\",\"getScore\":0.0,\"tId\":81},{\"score\":2,\"rightAnswer\":\"Hello! I love JAVA.\",\"answer\":{\"answerContent\":\"1\",\"typeId\":4},\"question\":\"下面程序的运行结果:____\\nimport java.io.*;\\npublic class abc\\n{   \\npublic static void main(String args [ ])\\n{    \\nAB s = new AB(\\\"Hello!\\\",\\\"I love JAVA.\\\");\\n         System.out.println(s.toString( ));\\n    }\\n}\\nclass AB {\\n  String s1;\\n  String s2;\\n  public AB(String str1, String str2)\\n  { \\ns1 = str1;  \\ns2 = str2; \\n}\\n  public String toString( )\\n  { \\nreturn s1+s2;\\n}\\n}\",\"getScore\":0.0,\"tId\":83},{\"score\":2,\"rightAnswer\":\"6 5 4 3 2\",\"answer\":{\"answerContent\":\"1\",\"typeId\":4},\"question\":\"下面程序段的执行结果是_____\\n\\nint a[] = { 2, 3, 4, 5, 6 };\\n\\tfor (int i = a.length - 1; i >= 0; i--)\\n\\t//这里的a表示你上面定义的那个整型一维数组，然后a.length表示a数组的长度,第一次i出去是4所以a【4】=6\\n\\t\\tSystem.out.print(a[i] + \\\"\\\"); \",\"getScore\":0.0,\"tId\":85},{\"score\":2,\"rightAnswer\":\"类名\",\"answer\":{\"answerContent\":\"1\",\"typeId\":4},\"question\":\"构造方法是一种特殊的成员方法，构造方法名与_____ 相同。\",\"getScore\":0.0,\"tId\":86},{\"score\":5,\"rightAnswer\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a,b;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        b = scanner.nextInt();\\n        System.out.println(a+b);\\n    }\\n}\",\"answer\":{\"answerContent\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a,b;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        b = scanner.nextInt();\\n        System.out.println(a+b);\\n    }\\n}\",\"typeId\":5},\"question\":\"两数之和\",\"getScore\":5.0,\"tId\":97},{\"score\":5,\"rightAnswer\":\"import java.util.Scanner;\\nimport java.lang.Math;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        System.out.println(mySqrt(a));\\n    }\\n\\npublic static int mySqrt(int x) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\n    }\\n}\",\"answer\":{\"answerContent\":\"import java.util.Scanner;\\nimport java.lang.Math;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        System.out.println(mySqrt(a));\\n    }\\n\\npublic static int mySqrt(int x) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\n    }\\n}\",\"typeId\":5},\"question\":\"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。\\n\\n由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。\",\"getScore\":5.0,\"tId\":98}]}', 26, '这是批注', '2024-04-03 00:14:34');
INSERT INTO `student_exam` VALUES (38, 23, 31, '{\"totalScore\":77.5,\"content\":[{\"score\":5,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":0,\"typeId\":1},\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"getScore\":5.0,\"tId\":54},{\"score\":5,\"rightAnswer\":\"1\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"getScore\":5.0,\"tId\":55},{\"score\":5,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":0,\"typeId\":1},\"question\":\"在Java中对象可以赋值，只要使用赋值号（等号）即可，相当于生成了一个各属性与赋值对象相同的新对象。\",\"getScore\":5.0,\"tId\":56},{\"score\":5,\"rightAnswer\":\"1\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"1+1=2\",\"getScore\":5.0,\"tId\":91},{\"score\":5,\"rightAnswer\":\"B\",\"answer\":{\"answerContent\":\"B\",\"typeId\":2},\"question\":\"Java application中的主类需包含main方法，以下哪项是main方法的正确形参？\\nA、 String args B、String args[] C、Char arg D、StringBuffer args[]\",\"getScore\":5.0,\"tId\":58},{\"score\":5,\"rightAnswer\":\"A\",\"answer\":{\"answerContent\":\"A\",\"typeId\":2},\"question\":\"以下关于继承的叙述正确的是（）。\\nA、在Java中类只允许单一继承\\nB、在Java中一个类只能实现一个接口\\nC、在Java中一个类不能同时继承一个类和实现一个接口\\nD、在Java中接口只允许单一继承\",\"getScore\":5.0,\"tId\":59},{\"score\":5,\"rightAnswer\":\"D\",\"answer\":{\"answerContent\":\"D\",\"typeId\":2},\"question\":\"在使用interface声明一个接口时，只可以使用（  ）修饰符修饰该接口。\\nA、private B、protected C、private protected D、public\",\"getScore\":5.0,\"tId\":60},{\"score\":5,\"rightAnswer\":\"B\",\"answer\":{\"answerContent\":\"B\",\"typeId\":2},\"question\":\"Java源文件和编译后的文件扩展名分别为（  ）\\nA.class 和java B.java 和class C.class和class D.java和java\",\"getScore\":5.0,\"tId\":61},{\"score\":5,\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\",\\\"D\\\"]\",\"answer\":{\"answerContent\":[\"A\",\"C\",\"B\"],\"typeId\":3},\"question\":\"按照学生平均成绩(avg_grade) 将students表中的数据检索出来，下面SQL语句正确的是(  )\\nA) SELECT * FROM students ORDER BY avg_grade\\nB) SELECT * FROM students GROUP BY avg_grade ASC\\nC) SELECT * FROM students ORDER BY avg_grade DESC\\nD) SELECT * FROM students ORDER by avg_grade asc\",\"getScore\":2.5,\"tId\":71},{\"score\":5,\"rightAnswer\":\"[\\\"B\\\",\\\"C\\\"]\",\"answer\":{\"answerContent\":[\"B\",\"C\"],\"typeId\":3},\"question\":\"下面哪些不是java的简单数据类型( )\\nA. short\\nB. Boolean\\nC. Double\\nD. float\",\"getScore\":5.0,\"tId\":74},{\"score\":5,\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\"]\",\"answer\":{\"answerContent\":[\"A\",\"C\",\"D\"],\"typeId\":3},\"question\":\"不能用来修饰interface的有( )\\nA．private\\nB．public\\nC．protected\\nD．static\",\"getScore\":2.5,\"tId\":76},{\"score\":5,\"rightAnswer\":\"[\\\"A\\\",\\\"C\\\",\\\"D\\\"]\",\"answer\":{\"answerContent\":[\"B\",\"C\",\"D\"],\"typeId\":3},\"question\":\"下列标识符不合法的有( )\\nA．new\\nB．$Usdollars\\nC．1234\\nD．car.taxi\",\"getScore\":2.5,\"tId\":79},{\"score\":5,\"rightAnswer\":\"120\",\"answer\":{\"answerContent\":\"asd\",\"typeId\":4},\"question\":\"设有数组定义：int MyIntArray[ ] = { 10 , 20 , 30 , 40 , 50 , 60 , 70}; 则执行以下几个语句后的输出结果是___。\\nint s = 0 ;\\nfor (int i = 0 ; i < MyIntArray.length ; i + + )\\n    if ( i % 2 = = 1 )    \\ns += MyIntArray[i] ;\\nSystem.out.println(s);\",\"getScore\":0.0,\"tId\":81},{\"score\":5,\"rightAnswer\":\"Hello! I love JAVA.\",\"answer\":{\"answerContent\":\"Hello!I love JAVA.\",\"typeId\":4},\"question\":\"下面程序的运行结果:____\\nimport java.io.*;\\npublic class abc\\n{   \\npublic static void main(String args [ ])\\n{    \\nAB s = new AB(\\\"Hello!\\\",\\\"I love JAVA.\\\");\\n         System.out.println(s.toString( ));\\n    }\\n}\\nclass AB {\\n  String s1;\\n  String s2;\\n  public AB(String str1, String str2)\\n  { \\ns1 = str1;  \\ns2 = str2; \\n}\\n  public String toString( )\\n  { \\nreturn s1+s2;\\n}\\n}\",\"getScore\":0.0,\"tId\":83},{\"score\":5,\"rightAnswer\":\"三角形\",\"answer\":{\"answerContent\":\"三角形\",\"typeId\":4},\"question\":\"以下程序段的输出结果是___\\nint x = 5, y = 6, z = 4;\\n\\tif (x + y > z && x + z > y && z + y > x)\\n\\t\\tSystem.out.println(\\\"三角形\\\");\\n\\telse\\n\\t\\tSystem.out.println(\\\"不是三角形\\\");\",\"getScore\":5.0,\"tId\":84},{\"score\":5,\"rightAnswer\":\"6 5 4 3 2\",\"answer\":{\"answerContent\":\"6 5 4 3 2 \",\"typeId\":4},\"question\":\"下面程序段的执行结果是_____\\n\\nint a[] = { 2, 3, 4, 5, 6 };\\n\\tfor (int i = a.length - 1; i >= 0; i--)\\n\\t//这里的a表示你上面定义的那个整型一维数组，然后a.length表示a数组的长度,第一次i出去是4所以a【4】=6\\n\\t\\tSystem.out.print(a[i] + \\\"\\\"); \",\"getScore\":0.0,\"tId\":85},{\"score\":10,\"rightAnswer\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a,b;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        b = scanner.nextInt();\\n        System.out.println(a+b);\\n    }\\n}\",\"answer\":{\"answerContent\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a,b;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        b = scanner.nextInt();\\n        System.out.println(a+b);\\n    }\\n}\",\"typeId\":5},\"question\":\"两数之和：输入两个整数A，B返回A+B的值\",\"getScore\":10.0,\"tId\":97},{\"score\":10,\"rightAnswer\":\"import java.util.Scanner;\\nimport java.lang.Math;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        System.out.println(mySqrt(a));\\n    }\\n\\npublic static int mySqrt(int x) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\n    }\\n}\",\"answer\":{\"answerContent\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        System.out.println(mySqrt(a));\\n    }\\n\\npublic static int mySqrt(int x) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\n    }\\n}\",\"typeId\":5},\"question\":\"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。\\n\\n由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。\",\"getScore\":10.0,\"tId\":98}]}', 77.5, '', '2024-04-22 20:44:29');
INSERT INTO `student_exam` VALUES (39, 23, 34, '{\"totalScore\":9.0,\"content\":[{\"score\":2,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"getScore\":0.0,\"tId\":54},{\"score\":2,\"rightAnswer\":\"1\",\"answer\":{\"answerContent\":0,\"typeId\":1},\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"getScore\":0.0,\"tId\":55},{\"score\":2,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"在Java中对象可以赋值，只要使用赋值号（等号）即可，相当于生成了一个各属性与赋值对象相同的新对象。\",\"getScore\":0.0,\"tId\":56},{\"score\":2,\"rightAnswer\":\"1\",\"answer\":{\"answerContent\":0,\"typeId\":1},\"question\":\"在异常处理中，若try中的代码可能产生多种异常则可以对应多个catch语句，若catch中的参数类型有父类子类关系，此时应该将父类放在后面，子类放在前面。\",\"getScore\":0.0,\"tId\":57},{\"score\":2,\"rightAnswer\":\"1\",\"answer\":{\"answerContent\":0,\"typeId\":1},\"question\":\"JAVA程序的main方法必须写在类里面\",\"getScore\":0.0,\"tId\":104},{\"score\":2,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"变量由字母、下划线、数字、$符号随意组成\",\"getScore\":0.0,\"tId\":105},{\"score\":2,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"不同类型的变量，可以起相同的名字\",\"getScore\":0.0,\"tId\":106},{\"score\":2,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":1,\"typeId\":1},\"question\":\"for循环是先执行循环体语句，后进行条件判断\",\"getScore\":0.0,\"tId\":109},{\"score\":2,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":\"\",\"typeId\":1},\"question\":\"在类中实现一个接口，则一定要实现接口中的所有方法。\",\"getScore\":0.0,\"tId\":54},{\"score\":2,\"rightAnswer\":\"1\",\"answer\":{\"answerContent\":\"\",\"typeId\":1},\"question\":\"在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。\",\"getScore\":0.0,\"tId\":55},{\"score\":2,\"rightAnswer\":\"D\",\"answer\":{\"answerContent\":\"A\",\"typeId\":2},\"question\":\"在使用interface声明一个接口时，只可以使用（  ）修饰符修饰该接口。\\nA、private B、protected C、private protected D、public\",\"getScore\":0.0,\"tId\":60},{\"score\":2,\"rightAnswer\":\"B\",\"answer\":{\"answerContent\":\"B\",\"typeId\":2},\"question\":\"Java源文件和编译后的文件扩展名分别为（  ）\\nA.class 和java B.java 和class C.class和class D.java和java\",\"getScore\":2.0,\"tId\":61},{\"score\":2,\"rightAnswer\":\"A\",\"answer\":{\"answerContent\":\"B\",\"typeId\":2},\"question\":\"Java“一次编译，随处运行”的特点在于其（  ）\\nA.跨平台性 B.面向对象型 C.多线程性 D.安全性\",\"getScore\":0.0,\"tId\":62},{\"score\":2,\"rightAnswer\":\"D\",\"answer\":{\"answerContent\":\"B\",\"typeId\":2},\"question\":\"下面的代码段执行之后count的值是什么（ ）。\\nint count = 1;\\nfor (int i = 1; i <= 5; i++) {//第一次i出去是1\\n\\tcount += i;}\\nSystem.out.println(count);\\nA、5 B、1 C、15 D、16\",\"getScore\":0.0,\"tId\":64},{\"score\":2,\"rightAnswer\":\"C\",\"answer\":{\"answerContent\":\"B\",\"typeId\":2},\"question\":\"下列哪一个import命令可以使我们在程序中创建输入/输出流对象（  ）。\\nA、import java.sql.; B、import java.util.;\\nC、import java.io.; D、import java.net.;\",\"getScore\":0.0,\"tId\":65},{\"score\":2,\"rightAnswer\":\"C\",\"answer\":{\"answerContent\":\"B\",\"typeId\":2},\"question\":\"如下哪个是Java中有效的关键字( )\\nA、name B、hello C、false D、good\",\"getScore\":0.0,\"tId\":68},{\"score\":2,\"rightAnswer\":\"B\",\"answer\":{\"answerContent\":\"B\",\"typeId\":2},\"question\":\"定义一个类，必须使用的关键字是( )\\nA、public B、class C、interface D、static\",\"getScore\":2.0,\"tId\":69},{\"score\":2,\"rightAnswer\":\"B\",\"answer\":{\"answerContent\":\"\",\"typeId\":2},\"question\":\"1+1=()\\nA: 1\\nB: 2\\nC: 3\\nD: 4\",\"getScore\":0.0,\"tId\":101},{\"score\":2,\"rightAnswer\":\"A\",\"answer\":{\"answerContent\":\"\",\"typeId\":2},\"question\":\"以下关于继承的叙述正确的是（）。\\nA、在Java中类只允许单一继承\\nB、在Java中一个类只能实现一个接口\\nC、在Java中一个类不能同时继承一个类和实现一个接口\\nD、在Java中接口只允许单一继承\",\"getScore\":0.0,\"tId\":59},{\"score\":2,\"rightAnswer\":\"D\",\"answer\":{\"answerContent\":\"\",\"typeId\":2},\"question\":\"在使用interface声明一个接口时，只可以使用（  ）修饰符修饰该接口。\\nA、private B、protected C、private protected D、public\",\"getScore\":0.0,\"tId\":60},{\"score\":4,\"rightAnswer\":\"抽象方法\",\"answer\":{\"answerContent\":\"\",\"typeId\":4},\"question\":\"接口中的方法只能是_____\",\"getScore\":0.0,\"tId\":82},{\"score\":4,\"rightAnswer\":\"Hello! I love JAVA.\",\"answer\":{\"answerContent\":\"\",\"typeId\":4},\"question\":\"下面程序的运行结果:____\\nimport java.io.*;\\npublic class abc\\n{   \\npublic static void main(String args [ ])\\n{    \\nAB s = new AB(\\\"Hello!\\\",\\\"I love JAVA.\\\");\\n         System.out.println(s.toString( ));\\n    }\\n}\\nclass AB {\\n  String s1;\\n  String s2;\\n  public AB(String str1, String str2)\\n  { \\ns1 = str1;  \\ns2 = str2; \\n}\\n  public String toString( )\\n  { \\nreturn s1+s2;\\n}\\n}\",\"getScore\":0.0,\"tId\":83},{\"score\":4,\"rightAnswer\":\"父类\",\"answer\":{\"answerContent\":\"\",\"typeId\":4},\"question\":\"Java语言只允许单继承，指每个类只能有一个_____。\",\"getScore\":0.0,\"tId\":120},{\"score\":4,\"rightAnswer\":\"0\",\"answer\":{\"answerContent\":\"\",\"typeId\":4},\"question\":\"设 x = 2 ，则表达式 ( x + + )／3 的值是___\",\"getScore\":0.0,\"tId\":80},{\"score\":4,\"rightAnswer\":\"120\",\"answer\":{\"answerContent\":\"\",\"typeId\":4},\"question\":\"设有数组定义：int MyIntArray[ ] = { 10 , 20 , 30 , 40 , 50 , 60 , 70}; 则执行以下几个语句后的输出结果是___。\\nint s = 0 ;\\nfor (int i = 0 ; i < MyIntArray.length ; i + + )\\n    if ( i % 2 = = 1 )    \\ns += MyIntArray[i] ;\\nSystem.out.println(s);\",\"getScore\":0.0,\"tId\":81},{\"score\":5,\"rightAnswer\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a,b;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        b = scanner.nextInt();\\n        System.out.println(a+b);\\n    }\\n}\",\"answer\":{\"answerContent\":\"\",\"typeId\":5},\"question\":\"两数之和：输入两个整数A，B返回A+B的值\",\"getScore\":0.0,\"tId\":97},{\"score\":5,\"rightAnswer\":\"import java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner input=new Scanner(System.in);\\n        int score=input.nextInt();\\n        char grade=score>=90?\'A\':score>=60?\'B\':\'C\';\\n        System.out.println(grade);\\n    }\\n}\",\"answer\":{\"answerContent\":\"import java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner input=new Scanner(System.in);\\n        int score=input.nextInt();\\n        char grade=score>=90?\'A\':score>=60?\'B\':\'C\';\\n        System.out.println(grade);\\n    }\\n}\",\"typeId\":5},\"question\":\"学习成绩> =90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。\",\"getScore\":5.0,\"tId\":123}]}', 100, '', '2024-05-06 17:46:04');

-- ----------------------------
-- Table structure for tag
-- ----------------------------
DROP TABLE IF EXISTS `tag`;
CREATE TABLE `tag`  (
  `tag_id` int NOT NULL AUTO_INCREMENT,
  `u_id` int NULL DEFAULT NULL COMMENT '教师ID，标签可由教师管理，0代表所有教师可共享的标签',
  `name` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NULL DEFAULT NULL COMMENT '标签名称',
  PRIMARY KEY (`tag_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 17 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of tag
-- ----------------------------
INSERT INTO `tag` VALUES (13, 22, 'java期中考');
INSERT INTO `tag` VALUES (15, 22, 'Java毕设');

-- ----------------------------
-- Table structure for topic
-- ----------------------------
DROP TABLE IF EXISTS `topic`;
CREATE TABLE `topic`  (
  `t_id` int NOT NULL AUTO_INCREMENT COMMENT '题目ID',
  `u_id` int NULL DEFAULT NULL COMMENT '教师ID',
  `type_id` int NULL DEFAULT NULL COMMENT '题目类型：判断、单选、多选、填空、主观题',
  `tag_id` int NULL DEFAULT NULL COMMENT '题目标签：Java、Python等等',
  `difficulty_id` int NULL DEFAULT NULL COMMENT '难度类型：简单题、中等题、困难题',
  `question` text CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NULL COMMENT '问题',
  `answer` text CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NULL COMMENT '答案，格式：[\"A\",\"B\"]||[\"填空题和主观题的答案\"]，\r\n判断题[1|0]，1代表√，0代表×',
  `status` int NULL DEFAULT NULL COMMENT '状态：是否与其他人共享题目，1代表共享，0代表不共享',
  `is_exist` int NULL DEFAULT NULL COMMENT '逻辑删除，默认值1代表存在，0代表删除',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`t_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 126 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of topic
-- ----------------------------
INSERT INTO `topic` VALUES (39, 22, 1, 15, 1, 'asdasd', '{\"answerContent\":\"1\",\"typeId\":1}', 0, 0, '2024-02-27 01:06:17');
INSERT INTO `topic` VALUES (40, 22, 2, 15, 1, 'asd', '{\"answerContent\":\"A\",\"typeId\":2}', 0, 0, '2024-02-27 01:06:26');
INSERT INTO `topic` VALUES (41, 22, 3, 15, 1, 'asdasd', '{\"answerContent\":\"[\\\"B\\\",\\\"C\\\"]\",\"typeId\":3}', 0, 0, '2024-02-27 01:06:36');
INSERT INTO `topic` VALUES (42, 22, 4, 15, 2, '填空题____。', '{\"answerContent\":\"填空题\",\"typeId\":4}', 0, 0, '2024-02-27 12:42:47');
INSERT INTO `topic` VALUES (43, 22, 1, 15, 2, '判断题：对', '{\"answerContent\":\"1\",\"typeId\":1}', 0, 0, '2024-02-28 14:11:37');
INSERT INTO `topic` VALUES (44, 22, 2, 15, 1, '单选题A', '{\"answerContent\":\"A\",\"typeId\":2}', 0, 0, '2024-02-28 14:18:40');
INSERT INTO `topic` VALUES (45, 22, 3, 15, 1, '多选题AB', '{\"answerContent\":\"[\\\"A\\\",\\\"B\\\"]\",\"typeId\":3}', 0, 0, '2024-02-28 14:18:57');
INSERT INTO `topic` VALUES (46, 22, 4, 15, 3, '填空题___ASD', '{\"answerContent\":\"ASD\",\"typeId\":4}', 0, 0, '2024-02-28 14:19:14');
INSERT INTO `topic` VALUES (48, 22, 1, 15, 1, 'q', '{\"answerContent\":\"1\",\"typeId\":1}', 0, 0, '2024-02-28 16:00:52');
INSERT INTO `topic` VALUES (49, 22, 1, 15, 1, 'qw', '{\"answerContent\":\"1\",\"typeId\":1}', 0, 0, '2024-02-28 16:00:56');
INSERT INTO `topic` VALUES (50, 22, 1, 15, 1, 'q', '{\"answerContent\":\"1\",\"typeId\":1}', 0, 0, '2024-02-28 16:00:59');
INSERT INTO `topic` VALUES (51, 22, 1, 15, 1, 'qwe', '{\"answerContent\":\"1\",\"typeId\":1}', 0, 0, '2024-02-28 16:01:03');
INSERT INTO `topic` VALUES (52, 22, 1, 15, 1, 'eqw', '{\"answerContent\":\"1\",\"typeId\":1}', 0, 0, '2024-02-28 16:01:08');
INSERT INTO `topic` VALUES (53, 22, 1, 15, 1, 'qweqwe', '{\"answerContent\":\"1\",\"typeId\":1}', 0, 0, '2024-02-28 16:01:12');
INSERT INTO `topic` VALUES (54, 22, 1, 15, 1, '在类中实现一个接口，则一定要实现接口中的所有方法。', '{\"answerContent\":\"0\",\"typeId\":1}', 0, 1, '2024-03-24 03:31:22');
INSERT INTO `topic` VALUES (55, 22, 1, 15, 1, '在比较str1和str2两个字符串对象值是否相等时使用语句str1==str2。', '{\"answerContent\":\"1\",\"typeId\":1}', 0, 1, '2024-03-24 03:31:46');
INSERT INTO `topic` VALUES (56, 22, 1, 15, 1, '在Java中对象可以赋值，只要使用赋值号（等号）即可，相当于生成了一个各属性与赋值对象相同的新对象。', '{\"answerContent\":\"0\",\"typeId\":1}', 0, 1, '2024-03-24 03:32:12');
INSERT INTO `topic` VALUES (57, 22, 1, 15, 1, '在异常处理中，若try中的代码可能产生多种异常则可以对应多个catch语句，若catch中的参数类型有父类子类关系，此时应该将父类放在后面，子类放在前面。', '{\"answerContent\":\"1\",\"typeId\":1}', 0, 1, '2024-03-24 03:32:27');
INSERT INTO `topic` VALUES (58, 22, 2, 15, 1, 'Java application中的主类需包含main方法，以下哪项是main方法的正确形参？\nA、 String args B、String args[] C、Char arg D、StringBuffer args[]', '{\"answerContent\":\"B\",\"typeId\":2}', 0, 1, '2024-03-24 03:33:11');
INSERT INTO `topic` VALUES (59, 22, 2, 15, 2, '以下关于继承的叙述正确的是（）。\nA、在Java中类只允许单一继承\nB、在Java中一个类只能实现一个接口\nC、在Java中一个类不能同时继承一个类和实现一个接口\nD、在Java中接口只允许单一继承', '{\"answerContent\":\"A\",\"typeId\":2}', 0, 1, '2024-03-24 03:33:33');
INSERT INTO `topic` VALUES (60, 22, 2, 15, 1, '在使用interface声明一个接口时，只可以使用（  ）修饰符修饰该接口。\nA、private B、protected C、private protected D、public', '{\"answerContent\":\"D\",\"typeId\":2}', 0, 1, '2024-03-24 03:34:13');
INSERT INTO `topic` VALUES (61, 22, 2, 15, 1, 'Java源文件和编译后的文件扩展名分别为（  ）\nA.class 和java B.java 和class C.class和class D.java和java', '{\"answerContent\":\"B\",\"typeId\":2}', 0, 1, '2024-03-24 03:34:26');
INSERT INTO `topic` VALUES (62, 22, 2, 15, 1, 'Java“一次编译，随处运行”的特点在于其（  ）\nA.跨平台性 B.面向对象型 C.多线程性 D.安全性', '{\"answerContent\":\"A\",\"typeId\":2}', 0, 1, '2024-03-24 03:34:54');
INSERT INTO `topic` VALUES (63, 22, 2, 15, 1, '下列（  ）不是面向对象程序设计方法的特点。\nA.封装 B.继承 C.多态 D.结构化', '{\"answerContent\":\"D\",\"typeId\":2}', 0, 1, '2024-03-24 03:35:12');
INSERT INTO `topic` VALUES (64, 22, 2, 15, 1, '下面的代码段执行之后count的值是什么（ ）。\nint count = 1;\nfor (int i = 1; i <= 5; i++) {//第一次i出去是1\n	count += i;}\nSystem.out.println(count);\nA、5 B、1 C、15 D、16', '{\"answerContent\":\"D\",\"typeId\":2}', 0, 1, '2024-03-24 03:35:56');
INSERT INTO `topic` VALUES (65, 22, 2, 15, 1, '下列哪一个import命令可以使我们在程序中创建输入/输出流对象（  ）。\nA、import java.sql.; B、import java.util.;\nC、import java.io.; D、import java.net.;', '{\"answerContent\":\"C\",\"typeId\":2}', 0, 1, '2024-03-24 03:38:22');
INSERT INTO `topic` VALUES (66, 22, 2, 15, 1, '编译Java Application 源程序文件将产生相应的字节码文件，这些字节码文件的扩展名为(  )。\nA. java B. .class\nC. html D. .exe', '{\"answerContent\":\"B\",\"typeId\":2}', 0, 1, '2024-03-24 03:38:44');
INSERT INTO `topic` VALUES (67, 22, 2, 15, 1, '设 x = 1 , y = 2 , z = 3，则表达式 y＋＝z－－/＋＋x 的值是(  )。\nA. 3 B. 3. 5 C. 4 D. 5', '{\"answerContent\":\"A\",\"typeId\":2}', 0, 1, '2024-03-24 03:39:18');
INSERT INTO `topic` VALUES (68, 22, 2, 15, 1, '如下哪个是Java中有效的关键字( )\nA、name B、hello C、false D、good', '{\"answerContent\":\"C\",\"typeId\":2}', 0, 1, '2024-03-24 03:40:44');
INSERT INTO `topic` VALUES (69, 22, 2, 15, 1, '定义一个类，必须使用的关键字是( )\nA、public B、class C、interface D、static', '{\"answerContent\":\"B\",\"typeId\":2}', 0, 1, '2024-03-24 03:40:58');
INSERT INTO `topic` VALUES (70, 22, 3, 15, 3, '下列属于jsp中注释的有(  )\nA．<%--  与 --%>\nB． /\nC． /** 与 **/\nD．  <!-- 与 -->', '{\"answerContent\":\"[\\\"A\\\",\\\"D\\\"]\",\"typeId\":3}', 0, 1, '2024-03-24 03:43:32');
INSERT INTO `topic` VALUES (71, 22, 3, 15, 1, '按照学生平均成绩(avg_grade) 将students表中的数据检索出来，下面SQL语句正确的是(  )\nA) SELECT * FROM students ORDER BY avg_grade\nB) SELECT * FROM students GROUP BY avg_grade ASC\nC) SELECT * FROM students ORDER BY avg_grade DESC\nD) SELECT * FROM students ORDER by avg_grade asc', '{\"answerContent\":\"[\\\"A\\\",\\\"C\\\",\\\"D\\\"]\",\"typeId\":3}', 0, 1, '2024-03-24 03:44:00');
INSERT INTO `topic` VALUES (72, 22, 3, 15, 1, 'java8中，忽略内部接口的情况，在接口中以下哪条定义是正确的( )\nA. void methoda();\nB. public double methoda();\nC. public final double methoda();\nD. static void methoda(double d1);', '{\"answerContent\":\"[\\\"A\\\",\\\"B\\\"]\",\"typeId\":3}', 0, 1, '2024-03-24 03:44:39');
INSERT INTO `topic` VALUES (73, 22, 3, 15, 1, '下面哪个语句正确地声明一个整型的二维数组？\nA. int a[10][10] = new int[][]；\nB. int a[][] = new int[10][10]；\nC. int [][]a = new int[10][10]；\nD. int []a[] = new int[10][10]；', '{\"answerContent\":\"[\\\"B\\\",\\\"C\\\",\\\"D\\\"]\",\"typeId\":3}', 0, 1, '2024-03-24 03:45:28');
INSERT INTO `topic` VALUES (74, 22, 3, 15, 1, '下面哪些不是java的简单数据类型( )\nA. short\nB. Boolean\nC. Double\nD. float', '{\"answerContent\":\"[\\\"B\\\",\\\"C\\\"]\",\"typeId\":3}', 0, 1, '2024-03-24 03:45:47');
INSERT INTO `topic` VALUES (75, 22, 3, 15, 1, '下列说法错误的有( )\nA． 数组是一种对象\nB． 数组属于一种原生类\nC． int number=[]={31,23,33,43,35,63}\nD． 数组的大小可以任意改变', '{\"answerContent\":\"[\\\"B\\\",\\\"C\\\",\\\"D\\\"]\",\"typeId\":3}', 0, 1, '2024-03-24 03:46:20');
INSERT INTO `topic` VALUES (76, 22, 3, 15, 1, '不能用来修饰interface的有( )\nA．private\nB．public\nC．protected\nD．static', '{\"answerContent\":\"[\\\"A\\\",\\\"C\\\"]\",\"typeId\":3}', 0, 1, '2024-03-24 03:46:44');
INSERT INTO `topic` VALUES (77, 22, 3, 15, 1, '下列说法错误的有( )\nA． 在类方法中可用this来调用本类的类方法\nB． 在类方法中调用本类的类方法时可直接调用\nC． 在类方法中只能调用本类中的类方法\nD． 在类方法中绝对不能调用实例方法', '{\"answerContent\":\"[\\\"A\\\",\\\"C\\\",\\\"D\\\"]\",\"typeId\":3}', 0, 1, '2024-03-24 03:47:05');
INSERT INTO `topic` VALUES (78, 22, 3, 15, 1, '如下代码,哪两个说明是正确的( )\nclass A {\n	A() { }\n}\n\nclass B extends A {\n}\nA. B类的构造器应该是 public.\nB. B类的构造器应该是没有参数\nC. B类的构造器应该调用this().\nD. B类的构造器应该调用super().', '{\"answerContent\":\"[\\\"B\\\",\\\"D\\\"]\",\"typeId\":3}', 0, 1, '2024-03-24 03:47:57');
INSERT INTO `topic` VALUES (79, 22, 3, 15, 1, '下列标识符不合法的有( )\nA．new\nB．$Usdollars\nC．1234\nD．car.taxi', '{\"answerContent\":\"[\\\"A\\\",\\\"C\\\",\\\"D\\\"]\",\"typeId\":3}', 0, 1, '2024-03-24 03:48:17');
INSERT INTO `topic` VALUES (80, 22, 4, 15, 2, '设 x = 2 ，则表达式 ( x + + )／3 的值是___', '{\"answerContent\":\"0\",\"typeId\":4}', 0, 1, '2024-03-24 03:50:17');
INSERT INTO `topic` VALUES (81, 22, 4, 15, 3, '设有数组定义：int MyIntArray[ ] = { 10 , 20 , 30 , 40 , 50 , 60 , 70}; 则执行以下几个语句后的输出结果是___。\nint s = 0 ;\nfor (int i = 0 ; i < MyIntArray.length ; i + + )\n    if ( i % 2 = = 1 )    \ns += MyIntArray[i] ;\nSystem.out.println(s);', '{\"answerContent\":\"120\",\"typeId\":4}', 0, 1, '2024-03-24 03:51:54');
INSERT INTO `topic` VALUES (82, 22, 4, 15, 1, '接口中的方法只能是_____', '{\"answerContent\":\"抽象方法\",\"typeId\":4}', 0, 1, '2024-03-24 03:52:32');
INSERT INTO `topic` VALUES (83, 22, 4, 15, 1, '下面程序的运行结果:____\nimport java.io.*;\npublic class abc\n{   \npublic static void main(String args [ ])\n{    \nAB s = new AB(\"Hello!\",\"I love JAVA.\");\n         System.out.println(s.toString( ));\n    }\n}\nclass AB {\n  String s1;\n  String s2;\n  public AB(String str1, String str2)\n  { \ns1 = str1;  \ns2 = str2; \n}\n  public String toString( )\n  { \nreturn s1+s2;\n}\n}', '{\"answerContent\":\"Hello! I love JAVA.\",\"typeId\":4}', 0, 1, '2024-03-24 03:54:26');
INSERT INTO `topic` VALUES (84, 22, 4, 15, 1, '以下程序段的输出结果是___\nint x = 5, y = 6, z = 4;\n	if (x + y > z && x + z > y && z + y > x)\n		System.out.println(\"三角形\");\n	else\n		System.out.println(\"不是三角形\");', '{\"answerContent\":\"三角形\",\"typeId\":4}', 0, 1, '2024-03-24 03:55:20');
INSERT INTO `topic` VALUES (85, 22, 4, 15, 1, '下面程序段的执行结果是_____\n\nint a[] = { 2, 3, 4, 5, 6 };\n	for (int i = a.length - 1; i >= 0; i--)\n	//这里的a表示你上面定义的那个整型一维数组，然后a.length表示a数组的长度,第一次i出去是4所以a【4】=6\n		System.out.print(a[i] + \"\"); ', '{\"answerContent\":\"6 5 4 3 2\",\"typeId\":4}', 0, 1, '2024-03-24 03:57:11');
INSERT INTO `topic` VALUES (86, 22, 4, 15, 1, '构造方法是一种特殊的成员方法，构造方法名与_____ 相同。', '{\"answerContent\":\"类名\",\"typeId\":4}', 0, 1, '2024-03-24 03:57:30');
INSERT INTO `topic` VALUES (91, 22, 1, 15, 1, '1+1=2', '{\"answerContent\":\"1\",\"typeId\":1}', 0, 1, '2024-03-24 11:11:02');
INSERT INTO `topic` VALUES (97, 22, 5, 15, 1, '两数之和：输入两个整数A，B返回A+B的值', '{\"answerContent\":\"import java.util.Scanner;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a,b;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        b = scanner.nextInt();\\n        System.out.println(a+b);\\n    }\\n}\",\"typeId\":5}', 0, 1, '2024-04-02 00:59:54');
INSERT INTO `topic` VALUES (98, 22, 5, 15, 2, '给你一个非负整数 x ，计算并返回 x 的 算术平方根 。\n\n由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。', '{\"answerContent\":\"import java.util.Scanner;\\nimport java.lang.Math;\\npublic class Main{ \\n    public static void main(String[] args) { \\n        int a;\\n        Scanner scanner = new Scanner(System.in);\\n        a = scanner.nextInt();\\n        System.out.println(mySqrt(a));\\n    }\\n\\npublic static int mySqrt(int x) {\\n        if (x == 0) {\\n            return 0;\\n        }\\n        int ans = (int) Math.exp(0.5 * Math.log(x));\\n        return (long) (ans + 1) * (ans + 1) <= x ? ans + 1 : ans;\\n    }\\n}\",\"typeId\":5}', 0, 1, '2024-04-02 01:20:18');
INSERT INTO `topic` VALUES (101, 22, 2, 15, 1, '1+1=()\nA: 1\nB: 2\nC: 3\nD: 4', '{\"answerContent\":\"B\",\"typeId\":2}', 0, 1, '2024-04-25 23:05:02');
INSERT INTO `topic` VALUES (102, 22, 2, 15, 1, 'asd\nas\nas', '{\"answerContent\":\"A\",\"typeId\":2}', 0, 0, '2024-04-25 23:07:01');
INSERT INTO `topic` VALUES (103, 22, 5, 15, 2, '给定一个带符号的 32 位整数x，返回x其数字反转的值。如果反转x导致值超出有符号 32 位整数范围，则返回。\n\n示例1：\n输入： x = 123\n输出： 321\n\n示例2：\n输入： x = -123\n输出： -321\n\n示例3：\n输入： x = 120\n输出： 21', '{\"answerContent\":\"import java.util.*;\\nimport java.lang.*;\\npublic class Main{ \\n        public static void main(String[] args) { \\n        int a; \\n        Scanner scanner = new Scanner(System.in); \\n        a = scanner.nextInt(); \\n        System.out.println(reverse(a)); \\n} \\npublic static int reverse(int x) {\\n        int res = 0;\\n        boolean isNegative = x < 0;\\n        String strX = String.valueOf(Math.abs(x));\\n        StringBuilder sb = new StringBuilder(strX).reverse();\\n        \\n        try {\\n            res = Integer.parseInt(sb.toString());\\n        } catch (NumberFormatException e) {\\n            return 0;\\n        }\\n        return isNegative ? -res : res;       \\n    }\\n}\",\"typeId\":5}', 0, 1, '2024-04-26 18:06:19');
INSERT INTO `topic` VALUES (104, 22, 1, 15, 1, 'JAVA程序的main方法必须写在类里面', '{\"answerContent\":\"1\",\"typeId\":1}', 0, 1, '2024-04-29 21:44:20');
INSERT INTO `topic` VALUES (105, 22, 1, 15, 1, '变量由字母、下划线、数字、$符号随意组成', '{\"answerContent\":\"0\",\"typeId\":1}', 0, 1, '2024-04-29 21:51:48');
INSERT INTO `topic` VALUES (106, 22, 1, 15, 1, '不同类型的变量，可以起相同的名字', '{\"answerContent\":\"0\",\"typeId\":1}', 0, 1, '2024-04-29 21:52:27');
INSERT INTO `topic` VALUES (107, 22, 1, 15, 1, '运算符优先级别排序由高向低分别是：()、关系运算符、算术运算符、赋值运算符、!、逻辑运算符', '{\"answerContent\":\"0\",\"typeId\":1}', 0, 1, '2024-04-29 21:53:12');
INSERT INTO `topic` VALUES (108, 22, 1, 15, 1, 'for循环体语句中，可以包含多条语句，但要用大括号括起来', '{\"answerContent\":\"1\",\"typeId\":1}', 0, 1, '2024-04-29 21:53:56');
INSERT INTO `topic` VALUES (109, 22, 1, 15, 1, 'for循环是先执行循环体语句，后进行条件判断', '{\"answerContent\":\"0\",\"typeId\":1}', 0, 1, '2024-04-29 21:54:12');
INSERT INTO `topic` VALUES (110, 22, 3, 15, 2, '下列是jsp作用域的通信对象的有（）\n\nA．Session\n\nB. application\n\nC.pageContext\n\nD.cookie', '{\"answerContent\":\"[\\\"A\\\",\\\"B\\\",\\\"C\\\"]\",\"typeId\":3}', 0, 1, '2024-04-29 22:21:32');
INSERT INTO `topic` VALUES (111, 22, 3, 15, 1, 'java8中，忽略内部接口的情况，在接口中以下哪条定义是正确的?\n\nA. void methoda();\n\nB. public double methoda();\n\nC. public final double methoda();\n\nD. static void methoda(double d1);', '{\"answerContent\":\"[\\\"B\\\",\\\"A\\\"]\",\"typeId\":3}', 0, 1, '2024-04-29 22:23:31');
INSERT INTO `topic` VALUES (112, 22, 3, 15, 1, '下面哪些不是java的简单数据类型?\n\nA. short\n\nB. Boolean\n\nC. Double\n\nD. float', '{\"answerContent\":\"[\\\"B\\\",\\\"C\\\"]\",\"typeId\":3}', 0, 1, '2024-05-01 13:13:53');
INSERT INTO `topic` VALUES (113, 22, 3, 15, 1, '下面哪些语句能够正确地生成5个空字符串？\n\nA.String   a[]=new   String[5]；for(int   i=0；i<5；a[i++]=“”)；  \n     \n  B.String   a[]={“”，“”，“”，“”，“”}；     \n  \n  C.String   a[5]；     \n  \n  D.String[5]a； ', '{\"answerContent\":\"[\\\"A\\\",\\\"B\\\"]\",\"typeId\":3}', 0, 1, '2024-05-01 13:14:51');
INSERT INTO `topic` VALUES (114, 22, 3, 15, 1, '下列说法错误的有\n\nA． 数组是一种对象\n\nB． 数组属于一种原生类\n\nC． int number=[]={31,23,33,43,35,63}\n\nD． 数组的大小可以任意改变', '{\"answerContent\":\"[\\\"B\\\",\\\"C\\\",\\\"D\\\"]\",\"typeId\":3}', 0, 1, '2024-05-01 13:15:26');
INSERT INTO `topic` VALUES (115, 22, 3, 15, 1, '不能用来修饰interface的有\n\nA．private\n\nB．public\n\nC．protected\n\nD．static', '{\"answerContent\":\"[\\\"A\\\",\\\"C\\\"]\",\"typeId\":3}', 0, 1, '2024-05-01 13:17:06');
INSERT INTO `topic` VALUES (116, 22, 3, 15, 1, '下列说法错误的有\n\nA． 在类方法中可用this来调用本类的类方法\n\nB． 在类方法中调用本类的类方法时可直接调用\n\nC． 在类方法中只能调用本类中的类方法\n\nD． 在类方法中绝对不能调用实例方法', '{\"answerContent\":\"[\\\"A\\\",\\\"C\\\",\\\"D\\\"]\",\"typeId\":3}', 0, 1, '2024-05-01 13:17:35');
INSERT INTO `topic` VALUES (117, 22, 3, 15, 1, '如下代码,哪两个说明是正确的？\n\nclass A {\n	A() { }\n}\n\nclass B extends A {\n}\n\nA. B类的构造器应该是 public.\n\nB. B类的构造器应该是没有参数\n\nC. B类的构造器应该调用this().\n\nD. B类的构造器应该调用super().', '{\"answerContent\":\"[\\\"B\\\",\\\"D\\\"]\",\"typeId\":3}', 0, 1, '2024-05-01 13:18:19');
INSERT INTO `topic` VALUES (118, 22, 4, 15, 1, '设 x = 2 ，则表达式 ( x + + )／3 的值是_____。', '{\"answerContent\":\"0\",\"typeId\":4}', 0, 1, '2024-05-01 13:20:22');
INSERT INTO `topic` VALUES (119, 22, 4, 15, 1, '设有数组定义：int   MyIntArray[ ] = { 10 , 20 , 30 , 40 , 50 , 60 , 70};   则执行以下几个语句后的输出结果是     120      。\n\n    int s = 0 ;\n\n    for (int i = 0 ; i < MyIntArray.length ; i + + )\n\n         if ( i % 2 = = 1 )    \n\ns += MyIntArray[i] ;\n\n   System.out.print(s);', '{\"answerContent\":\"120\",\"typeId\":4}', 0, 1, '2024-05-01 13:21:46');
INSERT INTO `topic` VALUES (120, 22, 4, 15, 1, 'Java语言只允许单继承，指每个类只能有一个_____。', '{\"answerContent\":\"父类\",\"typeId\":4}', 0, 1, '2024-05-01 13:23:58');
INSERT INTO `topic` VALUES (121, 22, 4, 15, 1, '构造方法是一种特殊的成员方法，构造方法名与_______相同', '{\"answerContent\":\"类名\",\"typeId\":4}', 0, 1, '2024-05-01 13:25:10');
INSERT INTO `topic` VALUES (122, 22, 4, 15, 1, '如果将类MyClass声明为public，它的文件名称必须是_________才能正常编译。', '{\"answerContent\":\"MyClass.java\",\"typeId\":4}', 0, 1, '2024-05-01 13:25:59');
INSERT INTO `topic` VALUES (123, 22, 5, 15, 1, '学习成绩> =90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。', '{\"answerContent\":\"import java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner input=new Scanner(System.in);\\n        int score=input.nextInt();\\n        char grade=score>=90?\'A\':score>=60?\'B\':\'C\';\\n        System.out.println(grade);\\n    }\\n}\",\"typeId\":5}', 0, 1, '2024-05-01 14:09:00');
INSERT INTO `topic` VALUES (124, 22, 5, 15, 1, '学习成绩> =90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。', '{\"answerContent\":\"import java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner input=new Scanner(System.in);\\n        int score=input.nextInt();\\n        char grade=score>=90?\'A\':score>=60?\'B\':\'C\';\\n        System.out.println(grade);\\n    }\\n}\",\"typeId\":5}', 0, 0, '2024-05-01 14:09:01');
INSERT INTO `topic` VALUES (125, 22, 1, 13, 1, '共享题目创建', '{\"answerContent\":\"1\",\"typeId\":1}', 1, 1, '2024-05-04 11:14:43');

-- ----------------------------
-- Table structure for topic_type
-- ----------------------------
DROP TABLE IF EXISTS `topic_type`;
CREATE TABLE `topic_type`  (
  `type_id` int NOT NULL,
  `name` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`type_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb3 COLLATE = utf8mb3_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of topic_type
-- ----------------------------
INSERT INTO `topic_type` VALUES (1, '判断题');
INSERT INTO `topic_type` VALUES (2, '单选题');
INSERT INTO `topic_type` VALUES (3, '多选题');
INSERT INTO `topic_type` VALUES (4, '填空题');
INSERT INTO `topic_type` VALUES (5, '编程题');

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user`  (
  `u_id` int NOT NULL AUTO_INCREMENT,
  `r_id` int NOT NULL COMMENT '角色ID',
  `username` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NULL DEFAULT NULL,
  `password` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NULL DEFAULT NULL,
  `email` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NULL DEFAULT NULL,
  `is_exist` int NULL DEFAULT NULL COMMENT '1启用',
  `register_time` datetime NULL DEFAULT NULL,
  PRIMARY KEY (`u_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 28 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_general_ci ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES (24, 0, 'admin', '$2a$10$.DXD3Q3HEdBNmLdwTQClIudvT0i.K0pfu48QEiRezQ6XiesVA6rZu', 'rzy1147994141@gmail.com', 1, '2024-04-06 19:50:29');

SET FOREIGN_KEY_CHECKS = 1;
